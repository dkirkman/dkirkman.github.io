webpackJsonp([0xe0e2add82daa],{219:function(e,t){e.exports={data:{site:{siteMetadata:{title:"Wild Silicon",subtitle:"David's development blog",copyright:"Copyright © 2018 David Kirkman. All rights reserved.",author:{name:"David Kirkman",twitter:"#"},disqusShortname:"",url:"https://wildsilicon.com"}},markdownRemark:{id:"/Users/david/src/wild-silicon/src/pages/blog/2018/webpack-emcc/index.md absPath of file >>> MarkdownRemark",htmlAst:{type:"root",children:[{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"I’ve recently started using emscripten to make some legacy c++ code\navailable in javascript as a library — the main part of my\napplication is still javascript, but I’m making calls into and out\nof the c++ code.  While there seems to be extensive documentation\nrelated to building an entire application (e.g. a game) via\nemscripten, getting everything setup to use native code as a library\nturned out to take a bit of doing.  If this matches your use case,\nread on."}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"My goal is to have boilerplate that:"}]},{type:"text",value:"\n"},{type:"element",tagName:"ol",properties:{},children:[{type:"text",value:"\n"},{type:"element",tagName:"li",properties:{},children:[{type:"text",value:"Builds the c or c++ code with standard build tools, which in my\ncase means cmake.  Separate compilation and incremental builds are\nessential here, especially for c++."}]},{type:"text",value:"\n"},{type:"element",tagName:"li",properties:{},children:[{type:"text",value:"Produces output that can be directly consumed by node."}]},{type:"text",value:"\n"},{type:"element",tagName:"li",properties:{},children:[{type:"text",value:"Produces output that can be webpacked into a reasonable bundle."}]},{type:"text",value:"\n"},{type:"element",tagName:"li",properties:{},children:[{type:"text",value:"Produces both AsmJS and WebAssembly versions of the native code."}]},{type:"text",value:"\n"},{type:"element",tagName:"li",properties:{},children:[{type:"text",value:"Loads "},{type:"element",tagName:"em",properties:{},children:[{type:"text",value:"either"}]},{type:"text",value:" the AsmJS or WebAssembly version of the code, but\nnot both.  I want the ability to only send what will be required for\nexecution."}]},{type:"text",value:"\n"}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"I’ve made a "},{type:"element",tagName:"a",properties:{href:"https://github.com/dkirkman/ws-emscripten-webpack"},children:[{type:"text",value:"repo"}]},{type:"text",value:"\nthat accomplishes all of the above.  To use the repo, "},{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"make"}]},{type:"text",value:" will\nproduce the AsmJS and WebAssembly code.  "},{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"npm run build"}]},{type:"text",value:" will produce\na bundle suitable for embedding in a browser, as I’ve done at the bottom\nof this page."}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"The repo is laid out with the c code and javascript module that provides\naccess to it in the "},{type:"element",tagName:"tt",properties:{},children:[{type:"text",value:"src"}]},{type:"text",value:" directory.  "},{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"make"}]},{type:"text",value:" will compile the c code\nand move a copy of the javascript code to the "},{type:"element",tagName:"tt",properties:{},children:[{type:"text",value:"build"}]},{type:"text",value:" directory, where\nit can be directly consumed by node.  "},{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"npm run build"}]},{type:"text",value:" will package the\ncontents of "},{type:"element",tagName:"tt",properties:{},children:[{type:"text",value:"build"}]},{type:"text",value:" into "},{type:"element",tagName:"tt",properties:{},children:[{type:"text",value:"dist"}]}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"The basic steps operate as follows."}]},{type:"text",value:"\n"},{type:"element",tagName:"h2",properties:{},children:[{type:"text",value:"Compilation of c to LLVM bitcode"}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"This is accomplished entirely via CMake, which is configured by the\n"},{type:"element",tagName:"tt",properties:{},children:[{type:"text",value:"CMakeLists.txt"}]},{type:"text",value:" files in the root and "},{type:"element",tagName:"tt",properties:{},children:[{type:"text",value:"src"}]},{type:"text",value:" directories.\nThe "},{type:"element",tagName:"tt",properties:{},children:[{type:"text",value:"build"}]},{type:"text",value:" target in the "},{type:"element",tagName:"tt",properties:{},children:[{type:"text",value:"Makefile"}]},{type:"text",value:" will create the\n"},{type:"element",tagName:"tt",properties:{},children:[{type:"text",value:"build"}]},{type:"text",value:" directory, and use "},{type:"element",tagName:"tt",properties:{},children:[{type:"text",value:"cmake"}]},{type:"text",value:" and "},{type:"element",tagName:"tt",properties:{},children:[{type:"text",value:"emconfigure"}]},{type:"text",value:"\nto generate makefiles."}]},{type:"text",value:"\n"},{type:"element",tagName:"div",properties:{className:["gatsby-highlight"]},children:[{type:"text",value:"\n      "},{type:"element",tagName:"pre",properties:{className:["language-text"]},children:[{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"build:\n\tmkdir build\n\tcd build; emconfigure cmake ../"}]}]},{type:"text",value:"\n      "}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"The "},{type:"element",tagName:"tt",properties:{},children:[{type:"text",value:"make"}]},{type:"text",value:" uses "},{type:"element",tagName:"tt",properties:{},children:[{type:"text",value:"emmake"}]},{type:"text",value:" and "},{type:"element",tagName:"tt",properties:{},children:[{type:"text",value:"make"}]},{type:"text",value:" to actually build\nthe native libraries.  This is trivial for this simple boilerplate, but for\nlarge applications this is a full incremental build system."}]},{type:"text",value:"\n"},{type:"element",tagName:"div",properties:{className:["gatsby-highlight"]},children:[{type:"text",value:"\n      "},{type:"element",tagName:"pre",properties:{className:["language-text"]},children:[{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"make: build\n\tcd build; emmake make"}]}]},{type:"text",value:"\n      "}]},{type:"text",value:"\n"},{type:"element",tagName:"h2",properties:{},children:[{type:"text",value:"LLVM bitcode to AsmJS and WebAssembly"}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"This occurs via the "},{type:"element",tagName:"tt",properties:{},children:[{type:"text",value:"build/libTest.js"}]},{type:"text",value:" and\n"},{type:"element",tagName:"tt",properties:{},children:[{type:"text",value:"build/libTestAsm.js"}]},{type:"text",value:" targets.  I just use emscripten to\ntransform the LLVM bitcode in "},{type:"element",tagName:"tt",properties:{},children:[{type:"text",value:"build/libTest.a"}]}]},{type:"text",value:"\n"},{type:"element",tagName:"div",properties:{className:["gatsby-highlight"]},children:[{type:"text",value:"\n      "},{type:"element",tagName:"pre",properties:{className:["language-text"]},children:[{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"build/libTest.js: build/src/libTest.a\n\temcc -s WASM=1 -s MODULARIZE=1 build/src/libTest.a -o build/libTest.js\n\nbuild/libTestAsm.js: build/src/libTest.a\n\temcc -s WASM=0 -s MODULARIZE=1 build/src/libTest.a -o build/libTestAsm.js"}]}]},{type:"text",value:"\n      "}]},{type:"text",value:"\n"},{type:"element",tagName:"h2",properties:{},children:[{type:"text",value:"Javascript to dynamically load the emscripten code"}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"This is where it gets tricky, because I want the module to work with both\nnode.js and webpack.  For dynamic loading to work with webpack, we’ve got\nto either load the emscripten code with the old "},{type:"element",tagName:"tt",properties:{},children:[{type:"text",value:"require.ensure()"}]},{type:"text",value:"\nor use dynamic "},{type:"element",tagName:"tt",properties:{},children:[{type:"text",value:"import"}]},{type:"text",value:" from ES6 modules.  Making one of those work\nwith node is going to involve either a transpiling step for node, or using\na very recent version of node with experimental support for ES6 modules."}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"I’m relying on node support for ES6 modules to make this work.  To enable\nthis, we have to invoke node like so:"}]},{type:"text",value:"\n"},{type:"element",tagName:"div",properties:{className:["gatsby-highlight"]},children:[{type:"text",value:"\n      "},{type:"element",tagName:"pre",properties:{className:["language-text"]},children:[{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"node --experimental-modules"}]}]},{type:"text",value:"\n      "}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"For reasons I don’t entirely understand, node only supports ES6 modules in\nfiles with an "},{type:"element",tagName:"tt",properties:{},children:[{type:"text",value:".mjs"}]},{type:"text",value:" extension. "},{type:"element",tagName:"tt",properties:{},children:[{type:"text",value:".js"}]},{type:"text",value:" files will not work.\nThus, the main interface to the module is "},{type:"element",tagName:"tt",properties:{},children:[{type:"text",value:"src/index.mjs"}]},{type:"text",value:".\n"},{type:"element",tagName:"tt",properties:{},children:[{type:"text",value:"src/index.mjs"}]},{type:"text",value:" defines a default export that’s a function which\ntakes some configuration options and a callback, then loads the emscripten\ncode and calls the callback.  The money section looks like:"}]},{type:"text",value:"\n"},{type:"element",tagName:"div",properties:{className:["gatsby-highlight"]},children:[{type:"text",value:"\n      "},{type:"element",tagName:"pre",properties:{className:["language-javascript"]},children:[{type:"element",tagName:"code",properties:{className:["language-javascript"]},children:[{type:"text",value:"   "},{type:"element",tagName:"span",properties:{className:["token","function"]},children:[{type:"text",value:"module_options"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"("}]},{type:"text",value:"url_prefix"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:")"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"."}]},{type:"element",tagName:"span",properties:{className:["token","function"]},children:[{type:"text",value:"then"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"("}]},{type:"text",value:"mopts "},{type:"element",tagName:"span",properties:{className:["token","operator"]},children:[{type:"text",value:"=>"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"{"}]},{type:"text",value:"\n      "},{type:"element",tagName:"span",properties:{className:["token","keyword"]},children:[{type:"text",value:"import"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"("}]},{type:"element",tagName:"span",properties:{className:["token","comment"]},children:[{type:"text",value:'/* webpackChunkName: "libTest" */'}]},{type:"text",value:" \n        "},{type:"element",tagName:"span",properties:{className:["token","string"]},children:[{type:"text",value:"'./libTest.js'"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:")"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"."}]},{type:"element",tagName:"span",properties:{className:["token","function"]},children:[{type:"text",value:"then"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"("}]},{type:"text",value:"module "},{type:"element",tagName:"span",properties:{className:["token","operator"]},children:[{type:"text",value:"=>"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"{"}]},{type:"text",value:"\n        module"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"."}]},{type:"element",tagName:"span",properties:{className:["token","keyword"]},children:[{type:"text",value:"default"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"("}]},{type:"text",value:"mopts"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:")"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"."}]},{type:"element",tagName:"span",properties:{className:["token","function"]},children:[{type:"text",value:"then"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"("}]},{type:"text",value:"cspace "},{type:"element",tagName:"span",properties:{className:["token","operator"]},children:[{type:"text",value:"=>"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","function"]},children:[{type:"text",value:"cb"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"("}]},{type:"text",value:"cspace"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:")"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:")"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:";"}]},{type:"text",value:"\n      "},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"}"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:")"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:";"}]},{type:"text",value:"\n    "},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"}"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:")"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:";"}]}]}]},{type:"text",value:"\n      "}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"Note that that while the "},{type:"element",tagName:"tt",properties:{},children:[{type:"text",value:"—experimental-modules"}]},{type:"text",value:" has been in node\nsince version 8.5, it looks like dynamic imports are only recently supported.\nI’m using node 10.4.0."}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"Also note using a callback after loading the emscripten generated code\nisn’t just a stylistic choice.  The emscripten generated modules are\n“promise-like” in the sense that they have a then method — but\nbecause they have a "},{type:"element",tagName:"tt",properties:{},children:[{type:"text",value:"then"}]},{type:"text",value:" method they can’t actually be\nreturned as the value of a promise.  Any attempt to do so will just\nresult in an infinite "},{type:"element",tagName:"tt",properties:{},children:[{type:"text",value:"then"}]},{type:"text",value:" loop as the promise tries to get\nresolved.  Therefore, if you want to make the interface module return one\nof the emscripten modules directly, you’ve got to either wrap it in something\nwithout a "},{type:"element",tagName:"tt",properties:{},children:[{type:"text",value:"then"}]},{type:"text",value:" method, or you’ve got to use a callback.  I’ve\ndecided to use a callback."}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"Another key part of "},{type:"element",tagName:"tt",properties:{},children:[{type:"text",value:"src/index.mjs"}]},{type:"text",value:" is that if we are going to use\nWebAssembly, the emscripten module itself loads the WebAssembly file.  So\nwe need to tell emscripten where it is.  This occurs in the\n"},{type:"element",tagName:"tt",properties:{},children:[{type:"text",value:"module_options"}]},{type:"text",value:"promise where we eventually return"}]},{type:"text",value:"\n"},{type:"element",tagName:"div",properties:{className:["gatsby-highlight"]},children:[{type:"text",value:"\n      "},{type:"element",tagName:"pre",properties:{className:["language-javascript"]},children:[{type:"element",tagName:"code",properties:{className:["language-javascript"]},children:[{type:"element",tagName:"span",properties:{className:["token","keyword"]},children:[{type:"text",value:"return"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"{"}]},{type:"text",value:"\n  locateFile"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:":"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","keyword"]},children:[{type:"text",value:"function"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"("}]},{type:"text",value:"path"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:")"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"{"}]},{type:"text",value:"\n    "},{type:"element",tagName:"span",properties:{className:["token","keyword"]},children:[{type:"text",value:"if"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"("}]},{type:"text",value:"path"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"."}]},{type:"element",tagName:"span",properties:{className:["token","function"]},children:[{type:"text",value:"endsWith"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"("}]},{type:"element",tagName:"span",properties:{className:["token","string"]},children:[{type:"text",value:"'.wasm'"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:")"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:")"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"{"}]},{type:"text",value:"\n      "},{type:"element",tagName:"span",properties:{className:["token","keyword"]},children:[{type:"text",value:"if"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"("}]},{type:"text",value:"nodep"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:")"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"{"}]},{type:"text",value:"\n        "},{type:"element",tagName:"span",properties:{className:["token","keyword"]},children:[{type:"text",value:"return"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"("}]},{type:"text",value:"__dirname "},{type:"element",tagName:"span",properties:{className:["token","operator"]},children:[{type:"text",value:"+"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","string"]},children:[{type:"text",value:"'/'"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","operator"]},children:[{type:"text",value:"+"}]},{type:"text",value:" name"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:")"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:";"}]},{type:"text",value:"\n      "},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"}"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","keyword"]},children:[{type:"text",value:"else"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"{"}]},{type:"text",value:"\n        "},{type:"element",tagName:"span",properties:{className:["token","keyword"]},children:[{type:"text",value:"return"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"("}]},{type:"text",value:"url_prefix "},{type:"element",tagName:"span",properties:{className:["token","operator"]},children:[{type:"text",value:"+"}]},{type:"text",value:" name"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:")"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:";"}]},{type:"text",value:"\n      "},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"}"}]},{type:"text",value:"\n    "},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"}"}]},{type:"text",value:"\n    "},{type:"element",tagName:"span",properties:{className:["token","keyword"]},children:[{type:"text",value:"return"}]},{type:"text",value:" path"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:";"}]},{type:"text",value:"\n  "},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"}"}]},{type:"text",value:"\n"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"}"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:";"}]}]}]},{type:"text",value:"\n      "}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"Which works out if we are in node or a browser, and then either returns a\nfile path or url.  The "},{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"name"}]},{type:"text",value:" itself also depends on the execution context.\nFor node, it’s just "},{type:"element",tagName:"tt",properties:{},children:[{type:"text",value:"libTest.wasm"}]},{type:"text",value:".  For a browser environment however,\nwe want webpack to include a cache-busting hash to the filename, so we don’t\nactually know what the file name is going to be.  However, we can ask\nwebpack to “import” the wasm file, and that will resolve to a string\ncontaining the actual hash-containing url."}]},{type:"text",value:"\n"},{type:"element",tagName:"div",properties:{className:["gatsby-highlight"]},children:[{type:"text",value:"\n      "},{type:"element",tagName:"pre",properties:{className:["language-javascript"]},children:[{type:"element",tagName:"code",properties:{className:["language-javascript"]},children:[{type:"element",tagName:"span",properties:{className:["token","keyword"]},children:[{type:"text",value:"let"}]},{type:"text",value:" wasm_name "},{type:"element",tagName:"span",properties:{className:["token","operator"]},children:[{type:"text",value:"="}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","keyword"]},children:[{type:"text",value:"new"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","class-name"]},children:[{type:"text",value:"Promise"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"("}]},{type:"element",tagName:"span",properties:{className:["token","keyword"]},children:[{type:"text",value:"function"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"("}]},{type:"text",value:"resolve"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:","}]},{type:"text",value:" reject"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:")"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"{"}]},{type:"text",value:"\n  "},{type:"element",tagName:"span",properties:{className:["token","keyword"]},children:[{type:"text",value:"if"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"("}]},{type:"text",value:"nodep"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:")"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","function"]},children:[{type:"text",value:"resolve"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"("}]},{type:"element",tagName:"span",properties:{className:["token","string"]},children:[{type:"text",value:"'libTest.wasm'"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:")"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:";"}]},{type:"text",value:"\n  "},{type:"element",tagName:"span",properties:{className:["token","keyword"]},children:[{type:"text",value:"else"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","function"]},children:[{type:"text",value:"resolve"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"("}]},{type:"element",tagName:"span",properties:{className:["token","keyword"]},children:[{type:"text",value:"import"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"("}]},{type:"element",tagName:"span",properties:{className:["token","comment"]},children:[{type:"text",value:'/* webpackChunkName: "wasmName" */'}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","string"]},children:[{type:"text",value:'"./libTest.wasm"'}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:")"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:")"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:";"}]},{type:"text",value:"\n"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"}"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:")"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:";"}]}]}]},{type:"text",value:"\n      "}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"The dynamic import of "},{type:"element",tagName:"tt",properties:{},children:[{type:"text",value:"libTest.wasm"}]},{type:"text",value:" won’t work at all in node, but\nit’s never executed in a node environment, so no harm no foul."}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"At this point, everything is in place to use the module with node.  In the\nroot of the repo is a simple test program named "},{type:"element",tagName:"tt",properties:{},children:[{type:"text",value:"node-main.mjs"}]},{type:"text",value:"."}]},{type:"text",value:"\n"},{type:"element",tagName:"div",properties:{className:["gatsby-highlight"]},children:[{type:"text",value:"\n      "},{type:"element",tagName:"pre",properties:{className:["language-javascript"]},children:[{type:"element",tagName:"code",properties:{className:["language-javascript"]},children:[{type:"element",tagName:"span",properties:{className:["token","keyword"]},children:[{type:"text",value:"import"}]},{type:"text",value:" ttest "},{type:"element",tagName:"span",properties:{className:["token","keyword"]},children:[{type:"text",value:"from"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","string"]},children:[{type:"text",value:"'./build/index.mjs'"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:";"}]},{type:"text",value:"\n\n"},{type:"element",tagName:"span",properties:{className:["token","function"]},children:[{type:"text",value:"ttest"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"("}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"{"}]},{type:"element",tagName:"span",properties:{className:["token","string"]},children:[{type:"text",value:"'asm.js'"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:":"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","boolean"]},children:[{type:"text",value:"true"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"}"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:","}]},{type:"text",value:" cspace "},{type:"element",tagName:"span",properties:{className:["token","operator"]},children:[{type:"text",value:"=>"}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"{"}]},{type:"text",value:"\n  console"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"."}]},{type:"element",tagName:"span",properties:{className:["token","function"]},children:[{type:"text",value:"log"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"("}]},{type:"element",tagName:"span",properties:{className:["token","string"]},children:[{type:"text",value:"'33 + 55 is '"}]},{type:"text",value:" "},{type:"element",tagName:"span",
properties:{className:["token","operator"]},children:[{type:"text",value:"+"}]},{type:"text",value:" cspace"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"."}]},{type:"element",tagName:"span",properties:{className:["token","function"]},children:[{type:"text",value:"_add_values"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"("}]},{type:"element",tagName:"span",properties:{className:["token","number"]},children:[{type:"text",value:"33"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:","}]},{type:"text",value:" "},{type:"element",tagName:"span",properties:{className:["token","number"]},children:[{type:"text",value:"55"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:")"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:")"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:";"}]},{type:"text",value:"\n"},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:"}"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:")"}]},{type:"element",tagName:"span",properties:{className:["token","punctuation"]},children:[{type:"text",value:";"}]}]}]},{type:"text",value:"\n      "}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"To run it you just need to"}]},{type:"text",value:"\n"},{type:"element",tagName:"div",properties:{className:["gatsby-highlight"]},children:[{type:"text",value:"\n      "},{type:"element",tagName:"pre",properties:{className:["language-text"]},children:[{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"node --experimental-modules node-main.mjs"}]}]},{type:"text",value:"\n      "}]},{type:"text",value:"\n"},{type:"element",tagName:"h2",properties:{},children:[{type:"text",value:"Webpack’n for use in a browser"}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"Most of the work to get webpack to produce dynamically loaded modules was\ndone in the design of the interface module "},{type:"element",tagName:"tt",properties:{},children:[{type:"text",value:"src/index.js"}]},{type:"text",value:".  By using\ndynamic imports for both "},{type:"element",tagName:"tt",properties:{},children:[{type:"text",value:"libTest.js"}]},{type:"text",value:" and "},{type:"element",tagName:"tt",properties:{},children:[{type:"text",value:"libTestAsm.js"}]},{type:"text",value:"\nwe ensure just the one we ask for will be loaded."}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"If fact, we can almost get away with default webpack behavior.  But not quite:\nmy "},{type:"element",tagName:"tt",properties:{},children:[{type:"text",value:"webpack.config.js"}]},{type:"text",value:" has a couple of important tweaks.  First\nof all, I want to encode the wasm filename with a hash, this is done with"}]},{type:"text",value:"\n"},{type:"element",tagName:"div",properties:{className:["gatsby-highlight"]},children:[{type:"text",value:"\n      "},{type:"element",tagName:"pre",properties:{className:["language-text"]},children:[{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:"  module: {\n    rules: [\n      { \n        test: /\\.wasm$/,\n        type: 'javascript/auto',\n        loader: 'file-loader',\n        options: {\n          name: '[name]-[hash].[ext]',         \n        }        \n      }\n    ]\n  },"}]}]},{type:"text",value:"\n      "}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"The second webpack tweak is that by default it seems to think that when it’s\ndealing with "},{type:"element",tagName:"tt",properties:{},children:[{type:"text",value:".mjs"}]},{type:"text",value:" files that it’s going to be targeting node\n(presumably because the "},{type:"element",tagName:"tt",properties:{},children:[{type:"text",value:".mjs"}]},{type:"text",value:" extension is not used by anybody else)."}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"To convince webpack to produce a bundle without references to various node things, I’ve got the following section"}]},{type:"text",value:"\n"},{type:"element",tagName:"div",properties:{className:["gatsby-highlight"]},children:[{type:"text",value:"\n      "},{type:"element",tagName:"pre",properties:{className:["language-text"]},children:[{type:"element",tagName:"code",properties:{className:["language-text"]},children:[{type:"text",value:" target: 'web',\n  node: {\n    __dirname: false,\n    fs: 'empty',\n    Buffer: false,\n    process: false\n  }"}]}]},{type:"text",value:"\n      "}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"With that in place, webpack produces:"}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"\n  "},{type:"element",tagName:"a",properties:{className:["gatsby-resp-image-link"],href:"/static/emscripten-build-05166a2a1d20122fa602cb574a710d09-54585.png",style:"display: block",target:"_blank",rel:["noopener"]},children:[{type:"text",value:"\n  \n  "},{type:"element",tagName:"span",properties:{className:["gatsby-resp-image-wrapper"],style:"position: relative; display: block; ; max-width: 960px; margin-left: auto; margin-right: auto;"},children:[{type:"text",value:"\n    "},{type:"element",tagName:"span",properties:{className:["gatsby-resp-image-background-image"],style:"padding-bottom: 49.921996879875195%; position: relative; bottom: 0; left: 0; background-size: cover; display: block;"},children:[{type:"text",value:"\n      "},{type:"element",tagName:"img",properties:{className:["gatsby-resp-image-image"],style:"width: 100%; height: 100%; margin: 0; vertical-align: middle; position: absolute; top: 0; left: 0; box-shadow: inset 0px 0px 0px 400px white;",alt:"emscripten-build",title:"",src:"/static/emscripten-build-05166a2a1d20122fa602cb574a710d09-c83f1.png",srcSet:["/static/emscripten-build-05166a2a1d20122fa602cb574a710d09-569e3.png 240w","/static/emscripten-build-05166a2a1d20122fa602cb574a710d09-93400.png 480w","/static/emscripten-build-05166a2a1d20122fa602cb574a710d09-c83f1.png 960w","/static/emscripten-build-05166a2a1d20122fa602cb574a710d09-54585.png 1282w"],sizes:["(max-width:","960px)","100vw,","960px"]},children:[]},{type:"text",value:"\n    "}]},{type:"text",value:"\n  "}]},{type:"text",value:"\n  \n  "}]},{type:"text",value:"\n    "}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"element",tagName:"tt",properties:{},children:[{type:"text",value:"dist/index.js"}]},{type:"text",value:" is the main entry point, everything else is\ndynamically loaded as needed.  If you’re wondering about the sizes,\n"},{type:"element",tagName:"tt",properties:{},children:[{type:"text",value:"libTestAsm"}]},{type:"text",value:" contains both AsmJS code "},{type:"element",tagName:"em",properties:{},children:[{type:"text",value:"and"}]},{type:"text",value:" the emscripten c\nruntime.  "},{type:"element",tagName:"tt",properties:{},children:[{type:"text",value:"libTest"}]},{type:"text",value:" just contains the emscripten c runtime,\nand loads the actual library code from "},{type:"element",tagName:"tt",properties:{},children:[{type:"text",value:"libTest-[hash].wasm"}]}]},{type:"text",value:"\n"},{type:"element",tagName:"h2",properties:{},children:[{type:"text",value:"Live results"}]},{type:"text",value:"\n"},{type:"element",tagName:"p",properties:{},children:[{type:"text",value:"I’ve embedded the webpack bundle into this page.  If you push one of\nthe buttons below, it will load the appropriate library on do the\ncalculation.  If you look at what your browser is downloading and when (e.g.\nfrom the network tab in the chrome developer tools) you can observe\nthe libraries being loaded on demand."}]},{type:"text",value:"\n"},{type:"element",tagName:"blog-emscripten-webpack",properties:{reactclass:"AddValues"},children:[{type:"text",value:"\n"}]},{type:"text",value:"\n"},{type:"element",tagName:"blog-emscripten-webpack",properties:{reactclass:"AddValues",asmjs:"true"},children:[{type:"text",value:"\n"}]}],data:{quirksMode:!1}},fields:{tagSlugs:["/blog/tags/emscripten/","/blog/tags/webpack/","/blog/tags/nodejs/","/blog/tags/development/"]},frontmatter:{title:"Making emscripten, webpack, and node.js work together",tags:["emscripten","webpack","nodejs","development"],date:"2018-06-12T00:00:00.000Z",description:"Using a single code base and emscripten to make a c or c++  library available to both node.js and webpack is not entirely  trivial.  I've set up a simple repository that does exactly that, and is configured to dynamically load either the WebAssembly or  AsmJS version of the native code."}}},pathContext:{slug:"/blog/2018/emscripten-webpack/"}}}});
//# sourceMappingURL=path---blog-2018-emscripten-webpack-e057c571f8e0f92dcc2b.js.map