{"version":3,"sources":["webpack:///webpack:///webpack/bootstrap?a816","webpack:///webpack:///src/MunkerIllusion.jsx","webpack:///webpack:///(webpack)/buildin/module.js?2f15","webpack:///webpack:///~/chroma-js/chroma.js?3d97","webpack:///webpack:/external \"react\"?dac6"],"names":["i","l","exports","modules","module","__webpack_require__","Object","configurable","enumerable","get","value","_react","MunkerIllusion","props","_classCallCheck","_this","myRef","React","createRef","widthRef","lightnessRef","offsetRef","widthChange","bind","lightnessChange","offsetChange","background","undefined","bar","scaleBackground","chroma","scale","correctLightness","scaleBar","width","height","Component","this","go","event","lightness","Number","current","offset","backgroundColor","hex","barColor","objColor","grating","y","svg","innerHTML","style","line","document","createElementNS","setAttribute","appendChild","cline1","cline2","label_text","min","max","step","defaultValue","ref","callback","_react2","display","vertical-align","font-size","float","type","onInput","onChange","labeled_slider","margin","slice","classToType","o","name","strType","limit","x","unpack","Array","args","clip_rgb","rgb","PI","TWOPI","PITHIRD","DEG2RAD","RAD2DEG","arguments","ctor","Color","_interpolators","__WEBPACK_AMD_DEFINE_RESULT__","_input","_guess_formats","_guess_formats_sorted","me","arg","mode","w","chk","console","OrRd","PuBu","BuPu","Oranges","BuGn","YlOrBr","YlGn","Reds","RdPu","Greens","YlGnBu","Purples","GnBu","Greys","YlOrRd","PuRd","Blues","PuBuGn","Viridis","Spectral","RdYlGn","RdBu","PiYG","PRGn","RdYlBu","BrBG","RdGy","PuOr","Set2","Accent","Set1","Set3","Dark2","Paired","Pastel2","Pastel1","results","w3cx11","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflower","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","laserlemon","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrod","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","maroon2","maroon3","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","purple2","purple3","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","lab2rgb","z","xyz_rgb","b","lab_xyz","t","LAB_CONSTANTS","Kn","Xn","Yn","Zn","t0","t1","t2","t3","rgb2lab","r","rgb_xyz","pow","xyz_lab","rgb2xyz","g","bezier","colors","c","lab0","I","lab","ref1","ref2","I0","I1","f","start","rotations","hue","gamma","dh","dl","a","amp","cos_a","sin_a","code","interpolate","m","col1","col2","interpol","res","v","round","Math","p","test","interpolate_lrgb","xyz0","xyz1","_average_lrgb","xyz","first","cnt","dx","dy","A","alpha","xyz2","isNaN","hex2rgb","u","rgb2hex","str","hxa","hsl2rgb","h","rgb2hsl","s","hsv2rgb","q","rgb2hsv","delta","num2rgb","num","rgb2num","hcg2rgb","_c","rgb2hcg","_g","css2rgb","css","aa","ab","hsl","rgb2css","rnd","hsl2css","lch2lab","lch2rgb","L","lab2lch","rgb2lch","rgb2cmyk","k","cmyk2rgb","apply","rgb2luminance","luminance_x","interpolate_rgb","rgba","cur_lum","eps","max_iter","lm","temperature2rgb","temp","rgb2temperature","minTemp","maxTemp","l1","l2","sum_sq","d","C","L1","L2","c1","c2","sl","sc","h1","c4","v1","v2","delC","delA","delB","v3","src","amount","lch","multiply","darken","lighten","screen","overlay","burn","dodge","blend","normal","blend_f","c0","each","out","sum","values","count","val","_mode","_nacol","_spread","_domain","_pos","_padding","_classes","_colors","_out","_min","_max","_correctLightness","_colorCache","_useCache","_gamma","setColors","col","resetCache","getClass","n","tmap","minc","maxc","getColor","bypassMap","classes","L0","pol","L_actual","L_diff","L_ideal","result","dm","dd","samples","filter","add","visit","data","limits","min_log","max_log","pb","pr","assignments","clusterSizes","repeat","nb_iters","centroids","push","j","mindist","dist","best","newCentroids","cluster","kClusters","tmpKMeansBreaks","am","hsi2rgb","rgb2hsi","interpolate_hsx","hue0","hue1","sat","lbv0","interpolate_num","n1","n2","interpolate_lab","call"],"mappings":";;;;;;;;;;;AACA,cAGA;AAGA,eACA,oBAGA,iBACAA,IADA,EAEAC,KAFA,EAGAC,WAHA,GAaA,OANAC,uCAGAC,QAHAD,EAMA;AA2CA,WAtCAE,SAGAA,OAHAA,EAMAA;AACAA,kBACAC,8BACAC,gBADAD,EAEAE,cAFAF,EAGAG,MAHAH,GADAD;AAIAI,IAXAJ,EAiBAA;AACAC,8CAAiDI,SAAjDJ;AAAiDI,IAlBjDL,EAsBAA;AACA,iCACA;AAA2B;AAAA,MAD3B,GAEA;AAAiC;AAAA,MAFjC,CAIA,OADAA,gBACA;AAAA,IA3BAA,EA+BAA;AAAsD;AAAA,IA/BtDA,EAkCAA,QAlCAA,EAsCA;AAAA,E,CAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OCnEAM,QDmEA;AAAA,OCnEAA,QDmEA;AAAA,OCnEAA,MACAN,IADAM,CDmEA,CClEAN;AAAAA;AAAAA,QAEMO;AACJ,gBAAYC,CAAZ,EAAYA;AAAAA;AAAAA;AAAOC,QAAPD,CAAOC,IAAPD,EAAOC,CAAPD,EAAOC;AAAAA;AAAAA,oEACXD,CADWC,GAEjBC,EAAKC,KAALD,GAAaE,UAAMC,SAAND,EAAbF,EACAA,EAAKI,QAALJ,GAAgBE,UAAMC,SAAND,EADhBF,EAEAA,EAAKK,YAALL,GAAoBE,UAAMC,SAAND,EAFpBF,EAGAA,EAAKM,SAALN,GAAiBE,UAAMC,SAAND,EAHjBF,EAKAA,EAAKO,WAALP,GAAmBA,EAAKO,WAALP,CAAiBQ,IAAjBR,GALnBA,EAMAA,EAAKS,eAALT,GAAuBA,EAAKS,eAALT,CAAqBQ,IAArBR,GANvBA,EAOAA,EAAKU,YAALV,GAAoBA,EAAKU,YAALV,CAAkBQ,IAAlBR,GAPpBA,CASA,IAAIW,IAAa,MAAjB,CAAiB,KACaC,CADb,KACbZ,EAAKF,KAALE,CAAWW,UADE,KACwBA,IAAaX,EAAKF,KAALE,CAAWW,UADhD,EAGjB,IAAIE,IAAM,QAAV,CAdiBd,YAeMa,CAfNb,KAebC,EAAKF,KAALE,CAAWa,GAfEd,KAeiBc,IAAMb,EAAKF,KAALE,CAAWa,GAflCd,GAiBjBC,EAAKc,eAALd,GACEe,UAAOC,KAAPD,CAAOC,CAAOL,CAAPK,EAAmB,OAAnBA,CAAPD,EAAoCE,gBAApCF,EAlBehB,EAmBjBC,EAAKkB,QAALlB,GACEe,UAAOC,KAAPD,CAAOC,CAAOH,CAAPG,EAAY,OAAZA,CAAPD,EAA6BE,gBAA7BF,EApBehB,EAsBjBC,EAAKmB,KAALnB,GAAW,GAtBMD,EAuBjBC,EAAKoB,MAALpB,GAAY,GAvBKD;AAAAA;AAAAA;AAAAA,UADQsB,WACRtB,GADQsB;AA4BzBC,cAAKC,EAALD;AAAKC,QA5BoBF,IA4BpBE,4CAGKC,CAHLD,EAGKC;AACVF,cAAKC,EAALD;AAAKC,QAJAA,EA5BoBF,EAgCpBE,gDAGSC,CAHTD,EAGSC;AACdF,cAAKC,EAALD;AAAKC,QAJAA,EAhCoBF,EAoCpBE,6CAGMC,CAHND,EAGMC;AACXF,cAAKC,EAALD;AAAKC,QAJAA,EApCoBF,EAwCpBE;AAIL,aAAIE,IAAYC,OAAOJ,KAAKjB,YAALiB,CAAkBK,OAAlBL,CAA0B3B,KAAjC+B,CAAhB;AAAA,aACIP,IAAQO,OAAOJ,KAAKlB,QAALkB,CAAcK,OAAdL,CAAsB3B,KAA7B+B,CADZ;AAAA,aAEIE,IAASF,OAAOJ,KAAKhB,SAALgB,CAAeK,OAAfL,CAAuB3B,KAA9B+B,CAFb;AAAA,aAIIG,IAAkBP,KAAKR,eAALQ,CAAqBG,CAArBH,EAAgCQ,GAAhCR,EAJtB;AAAA,aAKIS,IAAWT,KAAKJ,QAALI,CAAcG,CAAdH,EAAyBQ,GAAzBR,EALf;AAAA,aAOIU,IAAW,KAPf,CAOe,KACYpB,CADZ,KACXU,KAAKxB,KAALwB,CAAWW,OADA,KACuBD,IAAWV,KAAKxB,KAALwB,CAAWW,OAD7C,EAGf,IAIIC,CAJJ;AAAA,aAAIC,IAAMb,KAAKrB,KAALqB,CAAWK,OAArB,CAOA,KANAQ,EAAIC,SAAJD,GAAgB,EAAhBA,EACAA,EAAIE,KAAJF,CAAUxB,UAAVwB,GAAuBN,CADvBM,EAMKD,IAAEf,IAAM,CAAb,EAAgBe,KAAGZ,KAAKF,MAALE,GAAYH,CAA/B,EAAsCe,KAAS,IAANf,CAAzC,EAAkD;AAChD,eAAImB,IAAOC,SAASC,eAATD,CAAyB,4BAAzBA,EACyB,MADzBA,CAAX,CAYA,IATAD,EAAKG,YAALH,CAAkB,IAAlBA,EAAwB,CAAxBA,GACAA,EAAKG,YAALH,CAAkB,IAAlBA,EAAwBJ,CAAxBI,CADAA,EAEAA,EAAKG,YAALH,CAAkB,IAAlBA,EAAwBhB,KAAKH,KAA7BmB,CAFAA,EAGAA,EAAKG,YAALH,CAAkB,IAAlBA,EAAwBJ,CAAxBI,CAHAA,EAKAA,EAAKG,YAALH,CAAkB,QAAlBA,EAA4BP,CAA5BO,CALAA,EAMAA,EAAKG,YAALH,CAAkB,cAAlBA,EAAkCnB,CAAlCmB,CANAA,EAOAH,EAAIO,WAAJP,CAAgBG,CAAhBH,CAPAG,EASIJ,IAAI,EAAJA,IAAUA,IAAI,GAAlB,EAAuB;AACrB,iBAAIS,IAASJ,SAASC,eAATD,CAAyB,4BAAzBA,EACyB,MADzBA,CAAb,CAGAI,EAAOF,YAAPE,CAAoB,IAApBA,EAA0B,EAA1BA,GACAA,EAAOF,YAAPE,CAAoB,IAApBA,EAA0BT,CAA1BS,CADAA,EAEAA,EAAOF,YAAPE,CAAoB,IAApBA,EAA0B,GAA1BA,CAFAA,EAGAA,EAAOF,YAAPE,CAAoB,IAApBA,EAA0BT,CAA1BS,CAHAA,EAKAA,EAAOF,YAAPE,CAAoB,QAApBA,EAA8BX,CAA9BW,CALAA,EAMAA,EAAOF,YAAPE,CAAoB,cAApBA,EAAoCxB,CAApCwB,CANAA,EAQAR,EAAIO,WAAJP,CAAgBQ,CAAhBR,CARAQ,CAUA,IAAIC,IAASL,SAASC,eAATD,CAAyB,4BAAzBA,EACyB,MADzBA,CAAb,CAGAK,EAAOH,YAAPG,CAAoB,IAApBA,EAA0B,GAA1BA,GACAA,EAAOH,YAAPG,CAAoB,IAApBA,EAA0BV,IAAEf,CAAFe,GAAUN,IAAOT,CAA3CyB,CADAA,EAEAA,EAAOH,YAAPG,CAAoB,IAApBA,EAA0B,GAA1BA,CAFAA,EAGAA,EAAOH,YAAPG,CAAoB,IAApBA,EAA0BV,IAAEf,CAAFe,GAAUN,IAAOT,CAA3CyB,CAHAA,EAKAA,EAAOH,YAAPG,CAAoB,QAApBA,EAA8BZ,CAA9BY,CALAA,EAMAA,EAAOH,YAAPG,CAAoB,cAApBA,EAAoCzB,CAApCyB,CANAA,CASAT,EAAIO,WAAJP,CAAgBS,CAAhBT;AAAgBS;AAAAA;AAAAA,QA5DfrB,EAxCoBF,EAoGLuB,+CAMPC,CANOD,EAMKE,CANLF,EAMUG,CANVH,EAMeI,CANfJ,EAMqBK,CANrBL,EAMmCM,CANnCN,EAMwCO,CANxCP,EAMwCO;AAC5D,gBACMC,iCAAKf,SAAQgB,SAAS,OAAjBhB,EAA0BlB,OAAO,OAAjCkB,EAALe,IACEA,iCAAKf,SAAQgB,SAAW,YAAnBhB,EAAiCiB,kBAAkB,KAAnDjB,EACAlB,OAAS,OADTkB,EAALe,IAEEA,mCAAOf,SAAQkB,aAAa,QAArBlB,EAA+BiB,kBAAkB,QAAjDjB,EAAPe,IACGP,CADHO,CAFFA,EAKEA,iCAAKf,SAAQlB,OAAS,OAAjBkB,EAA0BmB,OAAQ,OAAlCnB,EAALe,IACEA,mCAAOK,MAAK,OAAZL,EAAoBF,KAAKA,CAAzBE,EACON,KAAKA,CADZM,EACiBL,KAAKA,CADtBK,EAC2BJ,MAAMA,CADjCI,EACuCH,cAAcA,CADrDG,EAEOM,SAASP,CAFhBC,EAE2BO,UAAUR,CAFrCC,EAGOf,SAAQiB,kBAAiB,QAAzBjB,EAHPe,GADFA,CALFA,CADFA,CADN;AAW4C,QAlBxBR,EApGKvB,EAsHmB;AAO5C,gBACE+B,qCACEA,iCAAKf,SAAQgB,SAAS,QAAjBhB,EAALe,IAEG9B,KAAKsC,cAALtC,CAAoB,cAApBA,EAAoC,CAApCA,EAAuC,EAAvCA,EAA2C,CAA3CA,EAA8C,CAA9CA,EACoBA,KAAKlB,QADzBkB,EACmCA,KAAKf,WADxCe,CAFH8B,EAKG9B,KAAKsC,cAALtC,CAAoB,sBAApBA,EAA4C,CAA5CA,EAA+C,CAA/CA,EAAkD,GAAlDA,EAAwD,CAAxDA,EACoBA,KAAKjB,YADzBiB,EACuCA,KAAKb,eAD5Ca,CALH8B,EAQG9B,KAAKsC,cAALtC,CAAoB,sBAApBA,EAA4C,CAA5CA,EAA+C,CAA/CA,EAAkD,GAAlDA,EAAwD,CAAxDA,EACoBA,KAAKhB,SADzBgB,EACoCA,KAAKZ,YADzCY,CARH8B,CADFA,EAcEA,iCAAKf,SAAQgB,SAAS,OAAjBhB,EAA0BwB,QAAQ,MAAlCxB,EAALe,IACEA,iCAAKjC,OAAOG,KAAKH,KAAjBiC,EAAwBhC,QAAQE,KAAKF,MAArCgC,EAA6CF,KAAK5B,KAAKrB,KAAvDmD,EACKf,SAAQgB,SAAS,OAAjBhB,EAA0BwB,QAAQ,MAAlCxB,EADLe,GADFA,CAdFA,CADF;AAiB6C,QAxBD,EAtHnB/B,EACRtB,EA6I4B,CA7I5BA;AA6I4B,IA9I3CF,EAFNP,CAgJiD,YASlCO,CATkC;AASlCA,EDvFf,ECuFeA;AC1JfR;AAoBA,YAnBAA,sBACAA,8BACAA,YADAA,EAGAA,+BAHAA,EAIAE,qCACAE,cADAF,EAEAG;AACA;AAAA,QAHAH,GAJAF,EAUAE,iCACAE,cADAF,EAEAG;AACA;AAAA,QAHAH,GAVAF,EAgBAA,qBAjBAA,GAmBA;AAAA,IApBAA;AAoBA,EF+CA,EE/CA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MCeA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACAyE,aADA,CAGAL;AAMA,2BAGA,KAFAM,QAEA,KAFAA,EAEA,KADAb,gFACA,UAAiCc,KAAjC,EAA0CA,GAA1C;AACAC,qBACAF,yCADAE;AADA,UAIA;AACA,iBAEA,OADAC,uCACA;AAAA,UAHA;AAbAT,YAoBAU;AAaA,gBAZA,cACArB,KADA,GAGA,cACAC,KADA,CAHA,EAMAqB,UACAA,KADAA,CANA,EASAA,UACAA,KADAA,CATA,EAYA;AAAA,QAjCAX,EAoCAY;AACA,gCACAC,6BADA,GAGAC,IAHA;AAGAA,QAxCAd,EA4CAe;AACA,kBAGA,KAFAC,iBACAA,yBADAA,EAEA,WAAmBT,KAAnB,EAA0B/E,OAA1B;AACAA,qBACAwF,sBADAxF,MAEAwF,eAFAxF,GAIAwF,aACAA,QADAA,CAJAxF,EAOAwF,eACAA,UADAA,CAPAxF,IAUO,YACPwF,aACAA,QADAA,GAGAA,aACAA,QADAA,CAJO,CAVPxF;AADA,UAuBA,OAHAwF,qBACAA,YADAA,EAGA;AAAA,QAvEAhB,EA0EAiB,WA1EAjB,EA0EAiB,eA1EAjB,EA0EAiB,YA1EAjB,EA0EAiB,cA1EAjB,EA0EAiB,aA1EAjB,EA0EAiB,YA1EAjB,EA0EAiB,aA1EAjB,EA0EAiB,cA1EAjB,EA0EAiB,cA1EAjB,EA0EAiB,YA1EAjB,EA0EAiB,YA1EAjB,EA4EAkB,SA5EAlB,EA8EAmB,SA9EAnB,EAgFAoB,WAhFApB,EAkFAqB,WAlFArB,EAkFAqB,CAEA/D;AACA,4CACAgE,YADA,GAGA;AACAC,qCACA;AAAA,iCACA;AAHA,WAIKC,CAJL,EAIKA,SAJL,EAIKA,cAJL,CAHA;AAOKA,QAVLH,EAaA,OAbAA,GAaA,CA/FArB,EAiGAyB,MAjGAzB,EAiGAyB,KAEA,CAFAA,KAEA,CAFAA,IAEA,UAFAA,IAEA,iBAFAA,KAGA7F,aAHA6F,CAjGAzB,EAoGApE,KAMKuB,CANLvB,MAIA8F;AACA;AAAA,QADAA,CAEKvE,KAFLuE,CAEKvE,CAFLuE,EAEKvE,EAFLuE,CAJA9F,MAMKuB,aANLvB,CApGAoE,EAgHA1C,mBAhHA0C,EAkHA2B,MAlHA3B,EAoHA4B,MApHA5B,EAsHA6B,MAtHA7B,EAwHAwB;AACA;AACA,yCAGA,KAFAM,UACAhB,MADAgB,EAEA,KAFAA,EAEA,sBAAyCvB,KAAzC,EAAkDA,GAAlD;AAEA,sBADAwB,gBACA,KACAjB,SADA;AAFA,YASA,IAHAA,iBACAkB,mBADAlB,GAGA,cACAgB,qCADA,KAEO;AAOP,kBANAD,MACAD;AACA;AAAA,cADAA,GAGAC,MAJAA,GAMA,KANAA,EAMA,cAAiDI,WAEjDD,KADAE,QACAF,kBAFiDC,CAAjD,EAA2DA,GAA3D,IAOAD,MACAF,4BADAE;AAIA,8BACAG,oCADA,EAGA,mBACAL,kBADA,CAHA,EAMA,uBACAA,cAPA;AAmBA,iBARAN;AACA;AAAA,UADAA,EAIAA;AACA;AAAA,UALAA,EAQA;AArDAA,UAxHAxB,EAiLA1C,YAjLA0C;;;;;;;;;;;;;;;;;;;AAuMA1C,wBACA8E,yGADA9E,EAEA+E,yGAFA/E,EAGAgF,yGAHAhF,EAIAiF,4GAJAjF,EAKAkF,yGALAlF,EAMAmF,2GANAnF,EAOAoF,yGAPApF,EAQAqF,yGARArF,EASAsF,yGATAtF,EAUAuF,2GAVAvF,EAWAwF,2GAXAxF,EAYAyF,4GAZAzF,EAaA0F,yGAbA1F,EAcA2F,0GAdA3F,EAeA4F,2GAfA5F,EAgBA6F,yGAhBA7F,EAiBA8F,0GAjBA9F,EAkBA+F,2GAlBA/F,EAmBAgG,4GAnBAhG,EAoBAiG,mIApBAjG,EAqBAkG,iIArBAlG,EAsBAmG,+HAtBAnG,EAuBAoG,+HAvBApG,EAwBAqG,+HAxBArG,EAyBAsG,iIAzBAtG,EA0BAuG,+HA1BAvG,EA2BAwG,+HA3BAxG,EA4BAyG,+HA5BAzG,EA6BA0G,8FA7BA1G,EA8BA2G,gGA9BA3G,EA+BA4G,yGA/BA5G,EAgCA6G,0IAhCA7G,EAiCA8G,+FAjCA9G,EAkCA+G,4IAlCA/G,EAmCAgH,iGAnCAhH,EAoCAiH,4GApCAjH,EAvMA0C,EA8OA;AACA,kBAEA,UADAwE,QACA;AACAA;AADA;AAHA,UA9OAxE,EA4ZA1C,WA9JAmH,OACAC,oBADAD,EAEAE,uBAFAF,EAGAG,eAHAH,EAIAI,qBAJAJ,EAKAK,gBALAL,EAMAM,gBANAN,EAOAO,iBAPAP,EAQAQ,gBARAR,EASAS,yBATAT,EAUAU,eAVAV,EAWAW,qBAXAX,EAYAY,gBAZAZ,EAaAa,oBAbAb,EAcAc,oBAdAd,EAeAe,qBAfAf,EAgBAgB,oBAhBAhB,EAiBAiB,gBAjBAjB,EAkBAkB,qBAlBAlB,EAmBAmB,yBAnBAnB,EAoBAoB,mBApBApB,EAqBAqB,kBArBArB,EAsBAsB,eAtBAtB,EAuBAuB,mBAvBAvB,EAwBAwB,mBAxBAxB,EAyBAyB,wBAzBAzB,EA0BA0B,mBA1BA1B,EA2BA2B,oBA3BA3B,EA4BA4B,mBA5BA5B,EA6BA6B,oBA7BA7B,EA8BA8B,sBA9BA9B,EA+BA+B,yBA/BA/B,EAgCAgC,qBAhCAhC,EAiCAiC,qBAjCAjC,EAkCAkC,kBAlCAlC,EAmCAmC,qBAnCAnC,EAoCAoC,uBApCApC,EAqCAqC,wBArCArC,EAsCAsC,wBAtCAtC,EAuCAuC,wBAvCAvC,EAwCAwC,wBAxCAxC,EAyCAyC,qBAzCAzC,EA0CA0C,mBA1CA1C,EA2CA2C,sBA3CA3C,EA4CA4C,kBA5CA5C,EA6CA6C,kBA7CA7C,EA8CA8C,qBA9CA9C,EA+CA+C,oBA/CA/C,EAgDAgD,sBAhDAhD,EAiDAiD,sBAjDAjD,EAkDAkD,kBAlDAlD,EAmDAmD,oBAnDAnD,EAoDAoD,qBApDApD,EAqDAqD,eArDArD,EAsDAsD,oBAtDAtD,EAuDAuD,eAvDAvD,EAwDAwD,gBAxDAxD,EAyDAyD,sBAzDAzD,EA0DA0D,eA1DA1D,EA2DA2D,mBA3DA3D,EA4DA4D,kBA5DA5D,EA6DA6D,oBA7DA7D,EA8DA8D,iBA9DA9D,EA+DA+D,gBA/DA/D,EAgEAgE,gBAhEAhE,EAiEAiE,qBAjEAjE,EAkEAkE,mBAlEAlE,EAmEAmE,wBAnEAnE,EAoEAoE,oBApEApE,EAqEAqE,uBArEArE,EAsEAsE,oBAtEAtE,EAuEAuE,qBAvEAvE,EAwEAwE,oBAxEAxE,EAyEAyE,yBAzEAzE,EA0EA0E,+BA1EA1E,EA2EA2E,oBA3EA3E,EA4EA4E,qBA5EA5E,EA6EA6E,oBA7EA7E,EA8EA8E,oBA9EA9E,EA+EA+E,sBA/EA/E,EAgFAgF,wBAhFAhF,EAiFAiF,uBAjFAjF,EAkFAkF,yBAlFAlF,EAmFAmF,yBAnFAnF,EAoFAoF,yBApFApF,EAqFAqF,sBArFArF,EAsFAsF,eAtFAtF,EAuFAuF,oBAvFAvF,EAwFAwF,gBAxFAxF,EAyFAyF,kBAzFAzF,EA0FA0F,iBA1FA1F,EA2FA2F,kBA3FA3F,EA4FA4F,kBA5FA5F,EA6FA6F,2BA7FA7F,EA8FA8F,qBA9FA9F,EA+FA+F,uBA/FA/F,EAgGAgG,uBAhGAhG,EAiGAiG,yBAjGAjG,EAkGAkG,0BAlGAlG,EAmGAmG,4BAnGAnG,EAoGAoG,0BApGApG,EAqGAqG,0BArGArG,EAsGAsG,uBAtGAtG,EAuGAuG,oBAvGAvG,EAwGAwG,oBAxGAxG,EAyGAyG,mBAzGAzG,EA0GA0G,sBA1GA1G,EA2GA2G,eA3GA3G,EA4GA4G,kBA5GA5G,EA6GA6G,gBA7GA7G,EA8GA8G,oBA9GA9G,EA+GA+G,iBA/GA/G,EAgHAgH,oBAhHAhH,EAiHAiH,iBAjHAjH,EAkHAkH,wBAlHAlH,EAmHAmH,oBAnHAnH,EAoHAoH,wBApHApH,EAqHAqH,wBArHArH,EAsHAsH,qBAtHAtH,EAuHAuH,oBAvHAvH,EAwHAwH,eAxHAxH,EAyHAyH,eAzHAzH,EA0HA0H,eA1HA1H,EA2HA2H,qBA3HA3H,EA4HA4H,iBA5HA5H,EA6HA6H,kBA7HA7H,EA8HA8H,kBA9HA9H,EA+HA+H,wBA/HA/H,EAgIAgI,cAhIAhI,EAiIAiI,oBAjIAjI,EAkIAkI,oBAlIAlI,EAmIAmI,sBAnIAnI,EAoIAoI,iBApIApI,EAqIAqI,qBArIArI,EAsIAsI,mBAtIAtI,EAuIAuI,mBAvIAvI,EAwIAwI,iBAxIAxI,EAyIAyI,iBAzIAzI,EA0IA0I,kBA1IA1I,EA2IA2I,oBA3IA3I,EA4IA4I,oBA5IA5I,EA6IA6I,oBA7IA7I,EA8IA8I,eA9IA9I,EA+IA+I,sBA/IA/I,EAgJAgJ,oBAhJAhJ,EAiJAiJ,cAjJAjJ,EAkJAkJ,eAlJAlJ,EAmJAmJ,kBAnJAnJ,EAoJAoJ,iBApJApJ,EAqJAqJ,oBArJArJ,EAsJAsJ,iBAtJAtJ,EAuJAuJ,gBAvJAvJ,EAwJAwJ,gBAxJAxJ,EAyJAyJ,qBAzJAzJ,EA0JA0J,iBA1JA1J,EA2JA2J,sBA3JA3J,EA9PAzE,EA8ZAqO;AACA,iCAYA,OAVA5S,KADAqF,iBACArF,0BACAgD,kBADAhD,EAEAkF,8BAFAlF,EAGA6S,8BAHA7S,EAIAgD,eAJAhD,EAKAkF,eALAlF,EAMA6S,eANA7S,EAMA6S,CACAC,gDADAD,EAEAC,8CAFAD,EAGAE,mDAHAF,EAIA,uBAJAA,CAIA;AAAA,QA3aAtO,EA8aAuO;AACA;AAAA,QA/aAvO,EAkbAyO;AACA,2BACAC,SADA,GAGAC,iBAHA;AAGAA,QAtbA3O,EA0bA2O,MACAC,MADAD,EAEAE,UAFAF,EAGAG,KAHAH,EAIAI,WAJAJ,EAKAK,cALAL,EAMAM,cANAN,EAOAO,aAPAP,EAQAQ,cARAR,EA1bA3O,EAqcAoP;AACA,iCAGA,OAFAC,gDACA1O,wBADA0O,EACA1O,CACA,OADAA,QACA,MADAA,EACA,aADAA,EACA,WADAA,IACA,CADAA,CACA;AADAA,QAxcAX,EA4cAsP;AACA,uCACAD,SADA,GAGAE,2BAHA;AAGAA,QAhdAvP,EAodAwP;AACA,2BACAD,YADA,GAGAb,eAHA;AAGAA,QAxdA1O,EA4dAyP;AACA,wBAQA,OAPAJ,gDACAA,SADAA,EAEAK,SAFAL,EAGAb,SAHAa,EAGAb,CACAgB,uDADAhB,EAEAgB,sDAFAhB,EAGAgB,sDAHAhB,CAIA;AADAgB,QApeAxP,EAweA1C;AACA;AACAiE,qCACA;AAAA,iCACA;AAHA,WAIKC,CAJL,EAIKA,kCAJL,EAIKA,cAJL;AAIKA,QA7eLxB,EAgfA2B,SAhfA3B,EAkfAwB;AACA;AAAA,QAnfAxB,EAsfA2P;AACA,6CAuFA,OA7EA,OATAC;AACA,uBAEA,KADApL,QACA,KADAA,EACA,cAAsCjE,KAAtC,EAA+CA,GAA/C;AACAsP,uBACArL,YADAqL;AADA,YAIA;AAPAD,YASA,YACAnQ;AACA,uBAEA,KADA+E,QACA,KADAA,EACA,cAAwCjE,KAAxC,EAAiDA,GAAjD;AACAsP,uBACArL,eADAqL;AADA,YAIA;AAPApQ,cAQOqQ,QARPrQ,EAQOqQ,QARPrQ,EASAsQ;AACA,oBASA,OARAC;AACA,sBAEA,KADAxL,QACA,WAAyBjE,MAAzB,EAAiC/E,OAAjC;AACAgJ;AADA,cAGA;AANAwL,gBAQA;AAAA,UApBA,IAsBK,kBACLC;AACA,uBAEA,KADAzL,QACA,KADAA,EACA,cAAwCjE,KAAxC,EAAiDA,GAAjD;AACAsP,uBACArL,eADAqL;AADA,YAIA;AAPAI,cAQOH,QARPG,EAQOH,QARPG,EAQOH,QARPG,EASAF;AACA,oBASA,OARAC;AACA,sBAEA,KADAxL,QACA,WAAyBjE,MAAzB,EAAiC/E,OAAjC;AACAgJ;AADA,cAGA;AANAwL,gBAQA;AAAA,UApBK,IAsBA,kBACLE;AACA,uBAEA,KADA1L,QACA,KADAA,EACA,cAAwCjE,KAAxC,EAAiDA,GAAjD;AACAsP,uBACArL,eADAqL;AADA,YAIA;AAPAK,cAQOJ,QARPI,EAQOJ,QARPI,EAQOJ,QARPI,EAQOJ,QARPI,EASAH;AACA,oBASA,OARAC;AACA,sBAEA,KADAxL,QACA,WAAyBjE,MAAzB,EAAiC/E,OAAjC;AACAgJ;AADA,cAGA;AANAwL,gBAQA;AAAA,UApBK,IAsBA,mBACLG,uBACAC,qBADAD,EAEAJ;AACA,2BACAI,QADA,GAGAC,eAHA;AAGAA,UAPK,CAlEL,EA6EA;AAAA,QA9kBApQ,EAilBA1C;AACA,eAKA,QAJA+S,SAIA,EAHA9S,KAGA,GAHAA;AACA;AAAA,UAEA;AAAA,QAvlBAyC,EA4nBA1C;AACA,qBAyFA,OAxFA,cACAgT,OADA,GAGA,cACAC,QADA,CAHA,EAMA,cACAC,KADA,CANA,EASA,cACAC,KADA,CATA,EAYA,cACAzS,UADA,CAZA,EAeA0S,KAfA,EAgBA,oBACAC,eADA,IAGAA,OACA3S,UAJA,CAhBA,EAoBAA,CAEAqS;AACA,6BAUA,OATAO,oCACAnV,wBADAmV,EAGAC,KADA,2BACAA,mBAHAD,EAIAE,QAJAF,EAKAG,SALAH,EASA,YAHAnV,mCAGA,UAFAA,kCAEA,UADAA,qBACA;AADAA,UAZAuC,EAeAsS,KAfAtS,GAeAsS;AACA,8BACAA,CADA,IAGAA,OACAD,CAJA;AAIAA,UAxCA,EA0CAA;AACA,8BACAE,CADA,IAGAA,OACAF,CAJA;AAIAA,UA/CA,EAiDAA;AACA,8BACAI,CADA,IAGAA,OACAJ,CAJA;AAIAA,UAtDA,EAwDAA;AACA,8BACAG,CADA,IAIA,eADAA,KACA,IAEA,OADAE,eACA,MACAF,QADA,CAFA,GAMAE,KANA,EAQAL,CAZA;AAYAA,UArEA,EAuEAA;AACA,8BACArS,CADA,IAGA,qBACAA,OACA2S,eAFA,KAIA3S,YACA2S,KALA,GAOAN,CAVA;AAUAA,UAlFA,EAoFAA;AACA;AAAA,UArFA,EAuFAA,QAvFA,EAwFA;AAAA,QAttBArQ,EAytBA1C;AACA,kBAGA,KAFA,oBACA0T,OADA,EAEA,OAAmBzQ,KAAnB,EAAmBA,EAAOA,CAA1B;AACAyQ,gBAHA,mBAGAA,MAHA,CAGAA,qBAHA,CAGAA;AADA,UAGA;AAAA,QAhuBAhR,EAmuBAyB,MAnuBAzB,EAswBA1C,gBAjCA2T;AACA,wBAmBA,KAlBA,cACAZ,MADA,GAGA,cACAa,SADA,CAHA,EAYA,uBACAC,QADA,CAZA,EAeA,uBACAC,QADA,CAfA,EAkBA,KAlBA,EAkBA,cAA4C7Q,KAA5C,EAAqDA,GAArD;AAEA,sBADA8Q,QACA;AACAC,kCACA;AAGA;AAPA,UAOA,eACA,8CAEA;AAAA,QAnwBAtR,EAwwBAwB;AACA;AAAA,QAzwBAxB,EA4wBA1C,SA5wBA0C,EA8wBAwB,yCA9wBAxB,EAgxBA2B;AACA,wBAGA,UADA6C,QADA/E,iBAEA;AACA8R,qBACA/M,SADA+M;AADA,UAIA;AAAA,QAxxBAvR,EA2xBA1C;AACA;AACAiE,qCACA;AAAA,iCACA;AAHA,WAIKC,CAJL,EAIKA,kCAJL,EAIKA,cAJL;AAIKA,QAhyBLxB,EAmyBAwB;AAIA,gBAHA,cACAgQ,MADA,GAGA,IACA3T,qCADA,GAGAA,qBAHA;AAGAA,QA1yBAmC,EA8yBAwB;AAIA,gBAHA,cACAgQ,MADA,GAGA,KAGAC,wBAHA,EAGAA,wBAHA,EAGAA,wBAHA,EAGAA,YAHA,IACA5T,kBADA;AACAA,QAnzBAmC,EAwzBA4B,SACA8P,IADA9P,EAEA+P;AACA,iBAEA,OADAf,mBACA,sCACA,KADA,GAGA,oEACA,KADA,GACA,KADA,CAHA;AAGA,UARAhP,GAxzBA5B,EAs0BA2B,cAt0BA3B,EAw0BA4R;AACA,kBAGA,OAFAC,YACAC,UADAD,EAEA;AAAA,QA50BA7R,EA+0BA+R;AACA,2BAGA,KAFA1B,kBACA2B,gBADA3B,EAEA,KAFAA,EAEA,cAAoC9P,KAApC,EAA6CA,GAA7C;AAEAS,eADA4O,KACA5O,MACAgR,uBADAhR,EAEAgR,uBAFAhR,EAGAgR,uBAHAhR,EAIAgR,gBAJAhR;AAFA,UAWA,OAHAgR,iBACAA,eADAA,EAEAA,eAFAA,EAGA;AAAA,QA91BAhS,EAi2BAyB,mBAj2BAzB,EAm2BA1C;AACA,mDASA,IARA,cACA0E,SADA,GAGAvG,YAHA,EAOAwW,KAHArC;AACA;AAAA,UADAA,CAGAqC,iBAPA,EAQA,cACA,YAMA,UAHAC,QACAC,KADAD,EAEAE,KAFAF,EADAF,YAIA;AACAA,6BACAE,2BADAF,EAEA,uCACAK,oBACAF,SADAE,EAEAD,UAHA,CAFAJ;AADA,UAUA,KADAM,eACA,KADAA,EACA,cAAoC/R,KAApC,EAA6CA,GAA7C;AAIA,qBAFAgS,KADA1C,QACA0C,UACAD,cADAC,EAEA;AACAC,6BACAN,WACA,uBACAG,oBACAF,SADAE,EAEAD,UAHA,IAKAJ,YAPAQ;AADA;AAJA,UAiBA;AACA;AAEA,kBADAH,mCACA;AACAA;AADA,cAGA;AACAA;AADA,cAGAL;AAAAA,YARA,MAUAA;AAXA,UAcA;AAAA,QA75BAhS,EAg6BAyS;AACA,kBACA,oDAYA,OAXA,qCACApU,eADA,GAGA,mBAEAA,KADAA,eACAA,uCAFA,CAHA,EAKAA,EAEAqU,mBAFArU,KAGA,EAHAA,EAIAqU,YAJArU,EAKA,OALAA,EAMA,CANAA,CAMA,CAEA,qCASA,OARA,mBACAA,eADA,GACAA,EAEAqU,mBAFArU,KAGA,EAHAA,GAGA,GAHAA,EAIAqU,aAJArU,EAKAqU,YALArU,EAMAmT,+BANAnT,CAOA,CAEA,qCACA,SAEA;AAAA,QA97BA2B,EAi8BA2S;AACA,8BAaA,OAZA,cACA3Q,SADA,GAGAqN,QAHA,EAGAA,QAHA,EAGAA,QAHA,EAGAA,QAHA,EAIAA,iBAJA,EAKAK,iBALA,EAMAlB,iBANA,EASAoE,KADAA,gBADAvD,oBACAuD,cACAA,sBATA,EAWAC,KADAA,kCACAA,sBAXA,EAYA;AACA,qCACA;AACA,4BACA;AACA,4BACA;AACA,wBANA;AADA;AAAA,QA/8BA7S,EA29BA2B;AACA;AAAA,QA59BA3B,EA+9BA1C;AACA;AACAiE,qCACA;AAAA,iCACA;AAHA,WAIKC,CAJL,EAIKA,kCAJL,EAIKA,cAJL;AAIKA,QAp+BLxB,EAu+BAwB;AAIA,gBAHA,cACAQ,SADA,GAGA;AAAA,QA3+BAhC,EA8+BA4B,SACA8P,IADA9P,EAEA+P;AACA,6DACA;AAAA,UAJA/P,GA9+BA5B,EAu/BA8S;AACA,sDAGA,IADAC,KADAjS,iBACAiS,0BACA,SACA1D,oBADA,KAEK;AASL,gBARAF,eACAU,aADAV,EAGAF,aADAC,wCACAD,CAHAE,EAIA4D,QAJA5D,EAKAA,gBALAA,EAMAA,QANAA,EAOAA,gBAPAA,EAQA,WAAqB5O,MAArB,EAA6B/E,OAA7B;AACA2T,0BACAA,SADAA,GAGAA,aACAA,SADAA,CAHAA,EAMA,eACAU,6BADA,GAES,eACTA,QADS,GAEA,eACTA,uCADS,GAGTA,QAbAV;AADA,YAiBAE;AAEA,iCACAA,CADA,EACAA,CADA,EACAA,CADA,EACAA,IADA,IACAA,CAEAA,CAFAA,EAEAA,CAFAA,EAEAA,CAFAA,CADA;AAGAA,QA5hCArP,EAgiCAgT;AACA,2BA2BA,YA1BA,CA0BA,KA1BA,CA0BA,IA1BA,aA0BA,KAzBA3D,kCAyBA,GAvBAA,QAuBA,EAtBAK,QAsBA,EArBAlB,QAqBA,EApBAnP,qBAoBA,EAlBA5D,MADA6D,qBACA7D,UAkBA,EAjBA6D,WACA2T,OACAF,cAFAzT,IAIA2T,sDAaA,EAXA5D,UACA0D,qBADA1D,GAEKK,UACLqD,yBADKrD,GAEAlB,YACLuE,yBADKvE,CAOL,EANAuE,CAEAA,OAFAA,IAGA,CAHAA,KAIAA,QAJAA,CAMA,EAFAA,CAEA,CAFAA,EAEA,CAFAA,EAEA,CAFAA,CAEA;AAAA,QA5jCA/S,EA+jCA1C;AACA;AACAiE,qCACA;AAAA,iCACA;AAHA,WAIKC,CAJL,EAIKA,kCAJL,EAIKA,cAJL;AAIKA,QApkCLxB,EAukCA2B,SAvkCA3B,EAykCAwB;AACA;AAAA,QA1kCAxB,EA6kCAkT;AACA,kEAIA,IAFAH,KADAjS,iBACAiS,0BACAxB,QADAwB,EAEA,SACA1D,cADA,KAkBA,QAfA,cACA0D,KADA,GAGAA,YACAA,QADAA,CAHA,EAMAA,UACAA,QADAA,CANA,EAYArB,eAZA,EAaAyB,kBAFA9C,KAFA0C,OAEA1C,KADA7U,QACA6U,CAEA8C,EAbA,EAcAzE,yBAdA,EAeA,IACA;AACAW,wDACA,MACA;AACAA,wDACA,MACA;AACAA,wDACA,MACA;AACAA,wDACA,MACA;AACAA,wDACA,MACA;AACAA,wDAjBA,CAoBA;AAAA,QAxnCArP,EA2nCAoT;AACA,uCAyBA,OAxBA/D,gDACAhQ,qBADAgQ,EAGAgE,KADA/T,qBACA+T,KAHAhE,EAIAkC,WAJAlC,EAKA,WACA0D,gBACAE,KAFA,KAIAA,WACA5D,YACA0D,eADA1D,CADA4D,EAIAvD,YACAqD,mBADArD,CAJAuD,EAOAzE,YACAuE,mBADAvE,CAPAyE,EAQAF,CAEAA,OAFAA,IAGA,CAHAA,KAIAA,QAJAA,CAZA,CALA1D,EAqBA0D,CAGA,CAHAA,EAGA,CAHAA,EAGA,CAHAA,CAGA;AAAA,QArpCA/S,EAwpCA1C;AACA;AACAiE,qCACA;AAAA,iCACA;AAHA,WAIKC,CAJL,EAIKA,kCAJL,EAIKA,cAJL;AAIKA,QA7pCLxB,EAgqCA2B,SAhqCA3B,EAkqCAwB;AACA;AAAA,QAnqCAxB,EAsqCAsT;AAEA,iEACAC,OADA,EAEAA,YAFA,EAGA,OAHA,EAIA,CAJA,KAMApR,0CACA,CADAA,EACA,CADAA,EACA,CADAA,EACA,CADAA,CANA;AAOA,QA/qCAnC,EAkrCAwT;AACA,eAEA,SADA/T,iBACA,EADAA,CACA,YADAA,QACA,KADAA,IACA;AADAA,QAprCAO,EAwrCA1C;AACA;AAAA,QAzrCA0C,EA4rCAwB;AAIA,gBAHA,cACAQ,SADA,GAGA;AAAA,QAhsCAhC,EAmsCA2B,UAnsCA3B,EAqsCA4B,SACA8P,IADA9P,EAEA+P;AACA,wFACA;AAAA,UAJA/P,GArsCA5B,EA8sCAyT;AACA,wEAMA,IAJAV,KADAjS,iBACAiS,0BAEArD,iBAFAqD,EAGAW,WAFA7D,QAEA6D,CAHAX,EAIA,SACA1D,cADA,KAmBA,QAhBA,cACA0D,KADA,GAGAA,YACAA,QADAA,CAHA,EAMAA,UACAA,QADAA,CANA,EAaAI,KADAzB,eACAyB,cAFA9C,KAFA0C,OAEA1C,KADA7U,QACA6U,CAEA8C,EAbA,EAcAzE,aAdA,EAeA6C,SAfA,EAgBA,IACA;AACAlC,wDACA,MACA;AACAA,wDACA,MACA;AACAA,wDACA,MACA;AACAA,wDACA,MACA;AACAA,wDACA,MACA;AACAA,wDAjBA,CAoBA;AAAA,QA5vCArP,EA+vCA2T;AACA,uCAwBA,OAvBAtE,gDACAhQ,qBADAgQ,EAIAQ,WADAwD,KADA/T,qBACA+T,KACAxD,OAJAR,EAKAuE,uBALAvE,EAMA,UACA0D,cADA,IAGA1D,YACA0D,eADA1D,GAGAK,YACAqD,mBADArD,CAHAL,EAMAb,YACAuE,mBADAvE,CANAa,EAOA0D,CAEAA,OAFAA,IAGA,CAHAA,KAIAA,QAJAA,CAVA,CANA1D,EAoBA0D,CAGA,CAHAA,EAGA,CAHAA,EAGA,CAHAA,CAGA;AAAA,QAxxCA/S,EA2xCA1C;AACA;AACAiE,qCACA;AAAA,iCACA;AAHA,WAIKC,CAJL,EAIKA,kCAJL,EAIKA,cAJL;AAIKA,QAhyCLxB,EAmyCA2B,SAnyCA3B,EAqyCAwB;AACA;AAAA,QAtyCAxB,EAyyCA6T;AACA,oCAEA,IADAC,qBACA,iCACA,sBAEA;AAEA,gBADA9S,mBACA,WAAqBT,MAArB,EAA6B/E,OAA7B;AACAwF;AADA,YAGAA;AAAAA,UALA,MAMK,2FAEL,KADAA,mBACA,WAAqBiB,MAArB,EAA6BzG,OAA7B;AACAwF;AADA,UAFK,MAKA;AAEL,gBADAA,mBACA,WAAsB+S,MAAtB,EAA+BvY,OAA/B;AACAwF;AADA,YAGAA;AAAAA,UALK,MAMA;AAEL,gBADAA,mBACA,WAAsBgT,MAAtB,EAA+BxY,OAA/B;AACAwF;AADA,YAGAA;AAAAA,UALK,MAKLA,CACKkQ,+FADLlQ,KACKkQ,CACL+C,iBADK/C,EAEL,CAFKA,KAEL,GAFKA,EAGL+C,WAHK/C,EAGL+C,CACAjT,QADAiT,EAEA,CAFAA,IAEA,CANAjT,IAMA,CACKkQ,qHADL,MACKA,CACL+C,iBADK/C,EAEL,CAFKA,KAEL,GAFKA,EAGL+C,WAHK/C,EAGL+C,CACAjT,QADAiT,EAEA,CAFAA,IAEA,KANA,CANAjT,CAcA;AAAA,QAn1CAhB,EAs1CAkU;AACA,eAEA,kBADAlS,6BACA,IACAA,+CADA,GAEK,eACLA,4DADK,GACLA,KADK,CAFL;AAEK,QA31CLhC,EAk2CAmU;AACA;AAAA,QAn2CAnU,EAs2CAoU;AACA,eAQA,OAPApS,4BACAiS,oBADAjS,EAEAiS,2BAFAjS,EAGAiS,2BAHAjS,EAIA,iBACAiS,QADA,CAJAjS,EAOA;AAAA,QA/2CAhC,EAk3CA2B;AACA;AAAA,QAn3CA3B,EAs3CA1C;AACA;AACAiE,qCACA;AAAA,iCACA;AAHA,WAIKC,CAJL,EAIKA,kCAJL,EAIKA,cAJL;AAIKA,QA33CLxB,EA83CAwB;AAIA,gBAHA,cACAQ,SADA,GAGA,0BACAkS,aADA,GAEK,0BACLE,2BADK,GACLA,KADK,CAFL;AAEK,QAp4CLpU,EAy4CA2B;AACA;AAAA,QA14CA3B,EA64CA4B,SACA8P,IADA9P,EAEA+P;AACA,wDACA;AAAA,UAJA/P,GA74CA5B,EAs5CAwB;AACA,kBASA,UARAF,qBACAmD,UACA5G,oBADA4G,GAGA5G,gBAJAyD,GAOAyR,cAPAzR,EAQA;AACA,4BACA;AAFA,UAKA;AAAA,QAr6CAtB,EAw6CAqU;AASA,wBAGA,OAFA5Y,iDAEA,CAFAA,EAEA,EADAsX,MACA,KAFAtX,EAEA,SAFAA,CAEA;AAAA,QAp7CAuE,EAu7CAsU;AACA,uCAKA,OAHA7Y,KADAqF,iBACArF,0BACA8Y,uBADA9Y,EACA8Y,QADA9Y,EACA8Y,QADA9Y,EACA8Y,EACAtE,cADAsE,EACAtE,CADAsE,GACAtE,IADAsE,EACAtE,QADAsE,EAEA,uBAFAA,CAEA;AAAA,QA77CAvU,EAg8CAwU;AACA,8BAOA,OANA/Y,gDACAoU,qBADApU,EAEAsX,6BAFAtX,EAGA,sBACAsX,cADA,CAHAtX,EAIAsX,CAEA,CAFAA,EAEA,CAFAA,EAEA,CAFAA,CAEA;AAAA,QAx8CA/S,EA28CAyU;AACA,iCAGA,OAFApF,gDACA5T,wBADA4T,EACA5T,QADA4T,EACA5T,QADA4T,EAEA;AAAA,QA/8CArP,EAk9CA1C;AACA,eAEA,OADAwD,mBACA;AAAA,QAr9CAd,EAw9CA1C;AACA,eAEA,OADAwD,mBACA;AAAA,QA39CAd,EA89CA2B,SA99CA3B,EAg+CA2B;AACA,wBAEA,OADAoR,gDACA;AAAA,QAn+CA/S,EAs+CAwB;AACA;AAAA,QAv+CAxB,EA0+CAwB;AACA;AAAA,QA3+CAxB,EA8+CA0U;AACA,8BAaA,OAZA,cACA1S,SADA,GAGAqN,0BAHA,EAGAA,QAHA,EAGAA,QAHA,EAKAK,QALA,EAMAlB,QANA,EAMAA,EAGA,KALAa,QAKA,KAFAsF,mCAEA,CAHAnG,KAEA6B,2BAFA7B,GAEA6B,CAEA,SAFAA,IAEA,CAJA7B,EAIA,CACA,SADA,IACA,CALAA,EAMA,CANAA,CAMA;AAAA,QA5/CAxO,EA+/CA4U;AACA,8BAIA,OAFA/E,KADA/O,iBACA+O,oCACAyC,2BADAzC,EAEA,WACA,CADA,EACA,CADA,EACA,CADA,EACA,CADA,IACA,CAEAA,oCAFA,EAGAqB,oCAHA,EAIAzS,oCAJA,EAKA6T,CALA,CADA;AAMAA,QA1gDAtS,EA6gDA2B;AACA;AAAA,QA9gDA3B,EAihDA1C;AACA;AACAiE,qCACA;AAAA,iCACA;AAHA,WAIKC,CAJL,EAIKA,mCAJL,EAIKA,cAJL;AAIKA,QAthDLxB,EAyhDAwB;AACA;AAAA,QA1hDAxB,EA6hDA2B;AACA,2BAWA,KAVAX;AACA,oBAGA,UADAwD,QADA/E,iBAEA;AACA8R,uBACA/M,SADA+M;AADA,YAIA;AAAA,UARAvQ,CASK6T,KATL7T,CASK6T,IATL7T,EASK6T,SATL7T,GAUA,WAAmBT,MAAnB,EAA2B/E,OAA3B;AACAwF;AADA,UAGA;AAAA,QA5iDAhB,EA+iDA1C;AACA;AACAiE,qCACA;AAAA,iCACA;AAHA,WAIKC,CAJL,EAIKA,iCAJL,EAIKA,cAJL;AAIKA,QApjDLxB,EAujDAwB;AACA,eAEA,SADAR,aACA;AAAA,QA1jDAhB,EA6jDA8U;AACA,eAKA,OAJAzF,gDAIA,SAHAA,QAGA,aAFAK,QAEA,aADAlB,QACA;AADAA,QAlkDAxO,EAskDA+U;AAEA,iBADApU,QACA,cACAA,SADA,GAGA4O,2BAHA;AAGAA,QA3kDAvP,EA+kDAgV;AACA,kBAGA,OAFAnD,YACAC,UADAD,EAEA;AAAA,QAnlDA7R,EAslDAyB,kBAtlDAzB,EAwlDAwB;AACA,4BAIA,OAHA,cACAQ,SADA,GAGA,oBAGAiT,eACA,UACAA,2BADA,GAEK,UACLA,4BADK,IAGLC,mBACAC,QADAD,EAEAE,MAFAF,EAGAvD;AACA,oBAGA,OADA0D,KADAnE,2BACAmE,eACA,8BACAnE,CADA,GAGAmE,QACA1D,QADA0D,GAGA1D,QANA;AAMAA,UAbAuD,EAgBAD,IADAC,QACAD,2BADAC,GAGAvD,2BArBK,CAHLsD,EA2BA3X,wBA9BA,IACAwX,aADA;AACAA,QA9lDA9U,EA8nDAsV;AACA,wBAWA,QAVAC,WAUA,IATA,EASA,IARAlG,SACAK,sFADAL,EAEAb,kGAMA,KAJAa,qFACAK,mFADAL,EAEAb,OAEA,GAFAA,CAEA,CAFAA,EAEA,CAFAA,EAEA,CAFAA,CAEA;AAAA,QA1oDAxO,EA6oDAwV;AACA,iCAKA,KAJAnG,4CACAoG,OADApG,EAEAqG,OAFArG,EAGA,EACA,UADA,EACA;AADA,YAGArO,OADAuU,gBACAvU,CAHA,EAIA,CAJA,IAIA,IAJA,IAIA,KAJA,GAKA0U,KALA,GAOAD,KAPA;AACA,UASA;AAAA,QA5pDAzV,EA+pDA1C;AACA;AACAiE,qCACA;AAAA,iCACA;AAHA,WAIKC,CAJL,EAIKA,0CAJL,EAIKA,cAJL;AAIKA,QApqDLxB,EAuqDA2B,mCAvqDA3B,EAyqDAwB;AACA;AAAA,QA1qDAxB,EA6qDAwB,4CA7qDAxB,EA+qDA1C;AACA,wBASA,OARA,+CACAsT,YADA,GAGA,+CACApC,YADA,CAHA,EAIAA,CAEAmH,iBAFAnH,KAGAoH,iBAHApH,IAGAoH,CAEAD,OAFAC,KAEAD,OAFAC,CAHApH,GAKAmH,CAEAC,OAFAD,KAEAC,OAFAD,CADA;AAGAC,QA5rDA5V,EAgsDA1C;AACA,iCAaA,UAZA,cACA0E,SADA,GAGA,+CACA4O,YADA,CAHA,EAMA,+CACApC,YADA,CANA,EASAmH,YATA,EAUAC,YAVA,EAWAC,KAXA,EAYA;AAEAA,iBADAC,6BACAD;AAFA,UAIA;AAAA,QAltDA7V,EAqtDA1C;AACA,oFAoBA,KAnBA,cACAiX,KADA,GAGA,cACAwB,KADA,CAHA,EAMA,+CACAnF,YADA,CANA,EASA,+CACApC,YADA,CATA,EAYAwH,oBAZA,EAYAA,QAZA,EAYAA,QAZA,EAaAC,oBAbA,EAaAA,QAbA,EAaAA,QAbA,EAcAC,qBAdA,EAeAC,qBAfA,EAgBAC,kDAhBA,EAiBAC,sCAjBA,EAkBAC,oCACA;AACAA;AADA,UAGA;AACAA;AADA,UAeA,OAZA5H,uGAEA2B,QADAkG,iBACAlG,eAFA3B,EAYA,IAHA8H,KALAR,KAKAQ,WAGA,SAFAC,KALAC,SAKAD,WAEA,UANAE,SAMA,IAJAA,CAIA,GAJAA,CADAC,SACAD,KAIA,GAJAA,KAIA,KAJAA,CAGAE,IARAR,mBAKAM,IAIA;AAAA,QA5vDA3W,EA+vDAwB;AACA,2BAIA,OAHA3D,MACAmE,yBADAnE,EACAmE,QADAnE,EAEAiZ,IAFAjZ,KAEAiZ,CAFAjZ,KAGA,KACArC,gBADA,IACAA,CACA,CAFA,GAGAsb,IAHA,GAKA3U,sDALA,GAQA2U,CARA;AAQAA,QA5wDA9W,EAgxDAwB;AACA,2BAGA,IAFA3D,MACAmE,yBADAnE,EACAmE,QACA;AAGA,eAFA8U,IAHAjZ,KAGAiZ,CAHAjZ,GAGAiZ,GACAtb,gBADAsb,IACAtb,CACA;AACA,qCACA,sBACA,SAGA;AACAsb,4BACA,MACA;AACAA,sCACA,MACA;AACAA,sCACA,MACA;AACAA,2BAdA,CADA,MAkBAA;AAnBA,kBAsBA3U;AAzBA,gBA4BA2U,MAEA,qBAhCAjZ,KAgCA,KAhCAA,EAgCA;AAAA,QAlzDAmC,EAqzDAwB;AACA;AAAA,QAtzDAxB,EAyzDAwB;AACA,mCACAlE,oDADA,GAGAO,YAHA;AAGAA,QA7zDAmC,EAg0DAwB;AACA,eAOA,OANA,cACAuV,KADA,GAGAlZ,IAHA,EAGAA,CACAmS,IADAnS,KACAmS,GADAnS,IAEA,CAFAA,KAEA,QALA,EAMA,eAHAA,KAGA,KAHAA,EAGA;AAAA,QAx0DAmC,EA20DAwB;AAIA,gBAHA,cACAuV,KADA,GAGA;AAAA,QA/0DA/W,EAk1DAwB,uCAl1DAxB,EAo1DAwB,2CAp1DAxB,EAs1DAwB;AACA,eAUA,OATA,cACAuV,KADA,GAGAlZ,IAHA,EAGAA,CACAmZ,IADAnZ,KACAmZ,GADAnZ,IAEA,CAFAA,KAEA,QALA,EAMAmZ,aACAA,QADAA,CANA,EASA,eANAnZ,KAMA,KANAA,EAMA;AAAA,QAj2DAmC,EAo2DAwB;AAIA,gBAHA,cACAuV,KADA,GAGA;AAAA,QAx2DA/W,EA22DAwB;AACA,kBAGA,OAFAR,gBACA4P,gBADA5P,EAEA;AAAA,QA/2DAhB,EAi5DAiX;AACA;AAAA,QAl5DAjX,EAq5DAkX;AACA,wBACA1I,CADA,GAGAoC,CAHA;AAGAA,QAz5DA5Q,EA65DAmX;AACA,wBACAvG,CADA,GAGApC,CAHA;AAGAA,QAj6DAxO,EAq6DAoX;AACA;AAAA,QAt6DApX,EAy6DAqX;AACA,0BACA,eADA,GAGA,6CAHA;AAGA,QA76DArX,EAi7DAsX;AACA;AAAA,QAl7DAtX,EAq7DAuX;AACA,4BACA,GADA,GACA,CAEA3G,iCAFA,IAGA,GAHA,GAIA,GAJA,GAMAA,CAPA;AAOAA,QA77DA5Q,EA67DA4Q,CA3EA4G;AACA,qBACA,gCAEA;AAAA,QAuEA5G,EAIA6G,MAJA7G,GAIA6G,CAxEAC;AACA;AACA,oBAGA,OAFAC,gBACAzB,cADAyB,EAEA;AAAA,UAJA;AAIA,QAmEAF,EAnEA,CAIAG;AACA;AACA,uBAEA,KADAC,QACA,WAAqBtX,MAArB,EAA6B/E,OAA7B;AACAqc;AADA,YAGA;AAAA,UANA;AAMA,QAXA,EAeA;AACA;AAAA,QAhBA,CAmEAJ,CAj8DAzX,EAm8DAwX,sBAn8DAxX,EAq8DAwX,oBAr8DAxX,EAu8DAwX,qBAv8DAxX,EAy8DAwX,mBAz8DAxX,EA28DAwX,oBA38DAxX,EA68DAwX,kBA78DAxX,EA+8DAwX,iBA/8DAxX,EAi9DA1C,YAj9DA0C,EAm9DA1C;AACA,wBAQA,KAPA+R,MACAhQ,qBADAgQ,EAEA/P,0BAFA+P,EAGAyI,MAHAzI,EAIA0I,UAJA1I,EAKA2I,QALA3I,IAOA,KAPAA,EAOA,cAAkC9O,KAAlC,EAA2CA,GAA3C;AAEA,oBADA0X,QACA,kBACA5I,kBACAA,UADAA,EAEA4I,cACA5I,SADA4I,CAFA5I,EAKA4I,cACA5I,SADA4I,CALA5I,EAQAA,YATA;AAFA,UAkBA,OAJAA,2BACAA;AACA;AAAA,UAFAA,EAIA;AAAA,QA9+DArP,EAi/DA1C;AACA,2EAyTA,OAxTA4a,WACAC,aADAD,EAEAE,KAFAF,EAEAE,CACA,CAHAF,EAIAG,UAJAH,EAKAI,MALAJ,EAMAK,UANAL,EAOAM,MAPAN,EAQAO,MARAP,EASAQ,MATAR,EAUAS,KAVAT,EAWAU,KAXAV,EAYAW,MAZAX,EAaAY,MAbAZ,EAcAa,MAdAb,EAeAc,KAfAd,EAgBAe;AACA,gCAOA,IANA,cACArJ,oBADA,GAGA,wDACAA,iDADA,CAHA,EAMA;AAEA,kCADAA,cACA,cAAgD,wBAAhD,EAAgFC,sBAAhF;AACAqJ,yBACA,uBACAtJ,WADA,CADAsJ;AADA,cAOA,KADAZ,cACA,SADAA,EACA,kBAAiD,wBAAjD,EAAoFzI,sBAApF;AACAyI;AADA;AAKA,mBADAa,KACA;AAAA,UAtCAjB,EAwCAkB;AACA,oBACA;AAGA,kBAFAC,kBACA7d,KACA;AACAA;AADA,cAGA;AAEA;AAAA,UAlDA0c,EAoDAoB;AACA;AAAA,UArDApB,EAuDA;AACA,6BASA,OARAD,OACAO,iBACAa,kBACA7d,QADA6d,EAEAE,uCAFAF,EAGAG,+CAHAH,EAIApB,+DALAO,CADAP,EAQA;AAAA,UAjEAC,EAmEAuB;AACA,mCAIA,IAHA,cACAC,MADA,GAGA,UACA,SAuBA,IAXAhL,IAVAgL,IAUAhL,CAVAgL,GACAlB,oBACAY,QACAZ,YADAY,CADAZ,GAGSI,WACTX,KADSW,KACTX,KADSW,IAGT,CAGAlK,EAEAgL,MACAhL,QADAgL,CAFAhL,EAKA,YACAA,YADA,CALAA,EAQAA,gCARAA,EASAA,+BATAA,EAUAiG,uBAVAjG,EAWA,WACAwK,SADA,KAEO;AACP,oCACA,kCAAgD,wBAAhD,EAAgF1d,sBAAhF,EAAgFA;AAEhF,yBADAkW,QACA;AACAwH,0BACA;AAEA;AACAA,0BACA;AAEA;AACAxK,+CACAwK,uCADAxK,CAEA;AAAA;AAAA,cAdA,MAiBS,yBACTwK,QADS,EAGTH,MACAD,QADAC;AAIA;AAAA,UA3HAb,EA6HAiB;AACA;AAAA,UA9HAjB,EAgIAe,IAhIAf,EAgIAe,CACA5I;AACA,iBAEA,OADAR,aACA,YACAA,MADA,GAGAA,CAHA;AAGAA,UAPAoJ,EAUAU,OAVAV,GAUAU;AACA,iBACA,oBACA,qBACAnB,OACAH,2BAFA,KAIAvC,kBAEA0C,IADA,WACAA,KADA,EACAA,KADA,IAGAlb,mBARA,GAWA+S,CAZA,IAcAmI,CAdA;AAcAA,UA1JAN,EA4JA7H;AACA,mCACA,uBACA,SAMA,IAJAsI,UACAC,mBADAD,EAEAL,MAFAK,EAGAhE,YAHAgE,EAIA,2BACA,0BAAwCpY,KAAxC,EAAiDA,GAAjD;AACAuV,uBACAwC,yBADAxC;AADA,YADA,MAMA,2BAAoC,wBAApC,EAAoEjG,sBAApE;AACAyI;AADA,YAKA,OADAD,YACA;AAAA,UAhLAH,EAkLA7H;AACA,sCAGA6H,OACAiB,GADAjB,EAEA7H,CALA,IACA6H,CADA;AACAA,UApLAA,EA0LA7H;AAEA,kBADA4I,MACA;AAAA,UA5LAf,EA8LA7H;AAEA,kBADAqI,OACA;AAAA,UAhMAR,EAkMA7H;AACA,sCAGA+H,OACA/H,CAJA,IACA+H,CADA;AACAA,UApMAF,EAyMA7H;AAyCA,kBAxCA,cACAkB,MADA,GAGAsH,KAHA,EAIAM,GAJA,EAMAG,IADAT,IACAS;AACA,2CAUA,KATAM,uBACA5D,qBADA4D,EAEAC,SAFAD,EAGAE,qBAHAF,EAKAG,SADAC,mBACAD,CALAH,EAMA5K,KANA4K,EAOA3K,KAPA2K,EAQAxE,MACA;AAEAyE,qBACAE,OADAF,GAGAE,SACA/K,OACAN,iBAFAqL,KAIA9K,OACAP,iBALAqL,CAHAF,EAUAC,qBAVAD,EAWAE,SAXAF;AAFA,cAgBA;AAAA,YA5BAhB,GA+BA;AACA;AAAA,YArCA,EAwCA;AAAA,UAlPAX,EAoPA7H;AACA,+BACA,uBACAqB,UADA,GAGA6G,KAHA,EAIAlI,CALA,IAOAkI,CAPA;AAOAA,UA5PAL,EA+PA7H;AACA,sCAKA,IAJA/O,yBACAuW,SADAvW,GAGA2Y,MAHA3Y,EAIA,wBACA2Y,eADA,KAEO,aACPA,YADO,KAEA,WACPC,UACAC,YADAD,EAEAD;AACAzV,oBACA,gBAAyB,sBAAzB,EAAyE,kBAAzE;AAAsGA;AAAtG,cACA;AAAA,YAHAyV,CAISpF,KAJToF,CAISpF,IAJToF,EAISpF,GAJToF,CAISpF;AACT;AAAA,YALAoF,CAFAC,CADO,KAUA;AAGP,iBAFAtK,QACAwK,MADAxK,EAEA,mBACA,8BAAgD,sBAAhD,EAA8EpU,sBAA9E;AACA4e;AADA,cADA,MAKAA,MAEAH;AACA;AAAA,cADAA;AASA,mBALA3c,SACA2c;AACA;AAAA,YADAA,CADA3c,GAKA;AAAA,UAtSA4a,EAwSA7H;AACA,+BACA0I,OACA1I,CAFA,IAIA0I,CAJA;AAIAA,UA7SAb,EAgTA7H;AACA,+BACA2I,OACA3I,CAFA,IAIA2I,CAJA;AAIAA,UArTAd,EAwTA;AAAA,QA3yEAlY,EA8yEA,qBACA1C,aADA,CA9yEA0C,EAkzEA1C;AACA;AAAA,QAnzEA0C,EAszEA1C;AACA;AAAA,QAvzEA0C,EA0zEA1C;AACA,8BAqCA,IApCA+R,MACAhQ,qBADAgQ,EAEA/P,0BAFA+P,EAGAyI,MAHAzI,EAIA0I,UAJA1I,EAKA2I,QALA3I,IAOA,cACAgL;AACA;AAAA,UAFA,CAPAhL,EAYAiL;AACA,qCACAjL,kBACAA,UADAA,EAEA4I,cACA5I,SADA4I,CAFA5I,EAKA4I,cACA5I,SADA4I,CALA5I,EAQAA,YATA;AASAA,UAtBAA,EAyBAkL;AACA,wBACA,2CACAD,OADA,GAES,wDACTA,OADS,GAGTA,IALA;AAKAA,UAhCAjL,EAoCA,mBACA,0BAAoC9O,KAApC,EAA6CA,GAA7C;AAEAga,aADAC,IACAD;AAFA,UADA,MAMA;AAEAA,aADAC,IACAD;AAFA,UASA,OAJAlL,2BACAA;AACA;AAAA,UAFAA,EAIA;AAAA,QA/2EArP,EAk3EA1C;AACA,0LAgBA,IAfA,cACA0E,WADA,GAGA,cACAuR,KADA,CAHA,EAMA,sBACAiH,gBADA,CANA,EASAnb,SATA,EAUAC,SAVA,EAWAkb,KAXA,EAYAzC;AACA;AAAA,UADAA,CAZA,EAeA,SACA,cAOA,IALA0C,QACA,2BACAA,WACAA,SAFA,CADAA,EAKA;AAEA,gBADAA,WACA,SADAA,EACA,WAAoC,wBAApC,EAAoEjf,sBAApE;AACAif;AADA,YAGAA;AAAAA,UALA,MAMK;AACL,uBACA,4DAKA,KAHAC,wBACAC,sBADAD,EAEAD,SAFAC,EAGA,UAHAA,EAGA,WAAqC,0BAArC,EAAwElf,wBAAxE;AACAif;AADA,YAGAA;AAAAA,UAVK,MAWA;AAEL,gBADAA,WACA,SADAA,EACA,WAAsC,wBAAtC,EAA2Ejf,sBAA3E;AACAkW,2CACAkJ,QADAlJ,MAEAA,CAFAA,GAGA+I,aAHA/I,IAKAmJ,WACAJ,uCANA/I;AADA,YAUA+I;AAAAA,UAZK,MAaA;AAeL,gBARApB,eACAyB,gBADAzB,EAEA0B,gBAFA1B,EAGA2B,OAHA3B,EAIA4B,KAJA5B,EAKA6B,QALA7B,EAKA6B,CACAA,MADAA,EAEAC,IAFAD,CAEAC,CAFAD,CALA7B,EAQA,SARAA,EAQA,WAAsC,wBAAtC,EAA2E7d,sBAA3E;AACA0f;AADA,YAIA,KADAA,SACA;AACA,wCAAwC,wBAAxC,EAA6EE,sBAA7E;AACAL;AADA,cAGA,2BAAsC,wBAAtC,EAA2Evf,sBAA3E,EAA2EA;AAG3E,oBAFAU,YACAmf,oBADAnf,EAEA,SAFAA,EAEA,WAA0C,wBAA1C,EAA+Ekf,sBAA/E;AAA+EA,kBAC/EE,gBAD+EF,IAE/EC,CAF+ED,KAG/EC,OACAE,KAJ+EH;AAA/E,gBAOAL,QACAD,QADAC;AAIA,mBADAS,kBACA,SADAA,EACA,YAAwC,2BAAxC,EAA6EJ,uBAA7E;AACAI;AADA,cAGA,4BAAsC,2BAAtC,EAA2EhgB,uBAA3E;AAEA,0BADAigB,QACA,IACAD,YADA,GAGAA,aAHA;AAFA,cAQA,4BAAwC,2BAAxC,EAA6EJ,uBAA7E;AACAI;AADA,cAIA,KADAR,SACA,SADAA,EACA,WAAyC,wBAAzC,EAAiFI,sBAAjF;AACA;AACAJ,yBACA;AAGAE;AANA,cAMAA,SACAD,CADAC,GAEA,GAFAA,KAGAF,OAHAE;AAOA,iBADAQ,QACA,SADAA,EACA,WAAuC,wBAAvC,EAA+EN,sBAA/E;AACAM;AADA,YAGA,2BAAqC,wBAArC,EAA6ElgB,sBAA7E;AAEAkgB,eADAD,QACAC;AAFA,YAKA,KADAC,SACA,SADAA,EACA,WAAuC,wBAAvC,EAA+EP,sBAA/E;AACAO,+BACAA,8BADAA;AADA,YAQA,KAJAA;AACA;AAAA,YADAA,GAGAlB,aAHAkB,EAIA,SAJAA,EAIA,mBAA0DC,MAA1D,EAAuEpgB,UAAvE;AACA+V,yBACAiB,qCACAiI,UAFAlJ;AADA;AAOA;AAAA,QAjgFAvR,EAogFA6b;AAMA,wBAyBA,OAvBA9I,KADAjS,iBACAiS,0BACAP,aACAO,KADAP,CADAO,EAEAA,CAEAA,QAFAA,IAGA,KAHAA,GAMArD,UAFAlB,eAEAkB,KADAL,yCACAK,EANAqD,GAOKA,YAILvE,UAFAa,eAEAb,KADAkB,oBAFAqD,UAEArD,sBACAlB,EAJKuE,GASL1D,UAFAK,eAEAL,KADAb,oBAFAuE,UAEAvE,sBACAa,EAlBA0D,EAiBAvE,CAMA,OAHAa,gBAGA,CANAb,EAMA,OAFAkB,gBAEA,CANAlB,EAMA,OADAA,gBACA,CANAA,EAMA,uBANAA,CAMA;AAAA,QAniFAxO,EAsiFA8b;AAMA,iCAoBA,OAnBAzM,gDACAnO,eADAmO,EAEAA,QAFAA,EAGAK,QAHAL,EAIAb,QAJAa,EAQA,OADA4D,QAFAxB,qBACAjW,mBADAiW,CAGA,IACAsB,KADA,IAGAA,2BACAA,qDADAA,EAEAA,gBAFAA,EAGAvE,UACAuE,SADAvE,CAHAuE,EAMAA,MATA,CARA1D,EAiBA0D,CAEA,OAFAA,EAEA,CAFAA,EAEA,CAFAA,CAEA;AAAA,QAhkFA/S,EAmkFA1C;AACA;AACAiE,qCACA;AAAA,iCACA;AAHA,WAIKC,CAJL,EAIKA,kCAJL,EAIKA,cAJL;AAIKA,QAxkFLxB,EA2kFA2B,SA3kFA3B,EA6kFAwB;AACA;AAAA,QA9kFAxB,EAilFA+b;AACA,0CAgDA,OA/CA,eACAlK,aACAC,WAFA,IAGK,eACLD,aACAC,WAFK,IAGA,eACLD,aACAC,WAFK,IAGA,eACLD,aACAC,WAFK,IAGA,+BACLZ,WACAW,WADAX,EAEAY,WAHK,CAZL,EAiBA,2BACAkK,8BACAC,QADAD,EACAC,QADAD,EACAC,QAFA,CAjBA,EAqBAzJ,uBASKA,WAKAA,WAMLhC,cANKgC,IACLhC,OACA,sCACA0L,KADA,CAFK1J,CALAA,IACLhC,OACA,sCACA0L,KADA,CAFK1J,CATLA,GAQAhC,aAPAyL,uBACAA,aADAA,GAEOA,uBACPA,WADOA,GAGPA,KAEAzL,CA7BA,EA2CA,cACA0L,mBADA,CA3CA,EA+CA,WADAC,eACA;AADAA,QAjoFAnc,EAgpFAoc;AACA,kBAGA,OAFAC,aACAC,WADAD,EAEA;AAAA,QAppFArc,EAopFA,CAfAyB;AACA,wBAGA,KADA+C,QACA,KADAA,EACA,KAFA/E,8CAEA,UAAiCc,KAAjC,EAA0CA,GAA1C;AACA2Q,qBACA1M,cADA0M;AADA,UAIA;AARAzP,WAeA,EAGA0Z,IAHA,CAGAA,UAHA,CAppFAnb,EAypFAuc;AACA,kBAGA,OAFA1K,aACAC,WADAD,EAEA;AAAA,QA7pFA7R,EAgqFAyB,kBAhqFAzB;AAgqFAyB,M,EAEC+a,I,CAAAA,I;AAAAA,IDrrFD,ECqrFCA,IDrrFD,CCqrFCA,IDrrFD,ECqrFCA,ODrrFD;ACqrFCA,EHtoFD,EGsoFCA;ACzsFD5gB,eAAA,mBAAAA,CAAA,CAAAA;AAAAA,EJmEA,EInEAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EJmEA,C","file":"3.render-page.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n\n\n\n// WEBPACK FOOTER //\n// webpack:///webpack/bootstrap","import React, {Component} from 'react';\nimport chroma from 'chroma-js';\n\nclass MunkerIllusion extends Component {\n  constructor(props) {\n    super(props);\n    this.myRef = React.createRef();\n    this.widthRef = React.createRef();\n    this.lightnessRef = React.createRef();\n    this.offsetRef = React.createRef();\n\n    this.widthChange = this.widthChange.bind(this);\n    this.lightnessChange = this.lightnessChange.bind(this);\n    this.offsetChange = this.offsetChange.bind(this);\n\n    let background = 'blue';\n    if (this.props.background !== undefined) background = this.props.background;\n\n    let bar = 'yellow';\n    if (this.props.bar !== undefined) bar = this.props.bar;\n\n    this.scaleBackground = \n      chroma.scale([background, 'white']).correctLightness();\n    this.scaleBar = \n      chroma.scale([bar, 'white']).correctLightness();\n\n    this.width=350;\n    this.height=200;\n  }\n\n  componentDidMount() {\n    this.go();\n  }\n\n  widthChange(event) {\n    this.go();\n  }\n  \n  lightnessChange(event) {\n    this.go();\n  }\n\n  offsetChange(event) {\n    this.go();\n  }\n\n  go() {\n    let lightness = Number(this.lightnessRef.current.value);\n    let width = Number(this.widthRef.current.value);\n    let offset = Number(this.offsetRef.current.value);\n\n    let backgroundColor = this.scaleBackground(lightness).hex();\n    let barColor = this.scaleBar(lightness).hex();\n\n    let objColor = 'red';\n    if (this.props.grating !== undefined) objColor = this.props.grating;\n\n    let svg = this.myRef.current;\n    svg.innerHTML = '';\n    svg.style.background = backgroundColor;\n\n    var y;\n\n\n    for (y=width/2; y<=this.height+width; y+=width*2) {\n      let line = document.createElementNS('http://www.w3.org/2000/svg',\n                                          'line');\n      \n      line.setAttribute('x1', 0);\n      line.setAttribute('y1', y);\n      line.setAttribute('x2', this.width);\n      line.setAttribute('y2', y);\n      \n      line.setAttribute('stroke', barColor);\n      line.setAttribute('stroke-width', width);\n      svg.appendChild(line);\n      \n      if (y > 50 && y < 150) {\n        let cline1 = document.createElementNS('http://www.w3.org/2000/svg',\n                                              'line');\n\n        cline1.setAttribute('x1', 50);\n        cline1.setAttribute('y1', y);\n        cline1.setAttribute('x2', 150);\n        cline1.setAttribute('y2', y);\n        \n        cline1.setAttribute('stroke', objColor);\n        cline1.setAttribute('stroke-width', width);        \n        \n        svg.appendChild(cline1);        \n\n        let cline2 = document.createElementNS('http://www.w3.org/2000/svg',\n                                              'line');\n\n        cline2.setAttribute('x1', 200);\n        cline2.setAttribute('y1', y+width - offset*width);\n        cline2.setAttribute('x2', 300);\n        cline2.setAttribute('y2', y+width - offset*width);\n        \n        cline2.setAttribute('stroke', objColor);\n        cline2.setAttribute('stroke-width', width);        \n        \n        let yy = y+width;\n        svg.appendChild(cline2);        \n      }\n\n    }\n  }\n\n  labeled_slider(label_text, min, max, step, defaultValue, ref, callback) {\n    return (\n          <div style={{display: 'block', width: '350px'}}>\n            <div style={{'display': 'table-cell', 'vertical-align': 'top',\n                 'width': '350px'}}>\n              <label style={{'font-size': '1.0rem', 'vertical-align': 'middle'}}>\n                {label_text}</label>\n              \n              <div style={{'width': '150px', 'float':'right'}}>\n                <input type=\"range\" ref={ref} \n                       min={min} max={max} step={step} defaultValue={defaultValue}\n                       onInput={callback}  onChange={callback}\n                       style={{'vertical-align':'middle'}}/>\n              </div>\n            </div>\n          </div>\n    );\n  }\n  render() {\n    return (\n      <div>\n        <div style={{display: 'inline'}}>\n\n          {this.labeled_slider(\"Stripe Width\", 1, 50, 1, 5, \n                               this.widthRef, this.widthChange)}\n\n          {this.labeled_slider(\"Background Lightness\", 0, 1, 0.01, 0, \n                               this.lightnessRef, this.lightnessChange)}\n\n          {this.labeled_slider(\"Right Grating Offset\", 0, 1, 0.05, 0,\n                               this.offsetRef, this.offsetChange)}\n          \n        </div>\n\n        <div style={{display: 'block', margin: 'auto'}}>\n          <svg width={this.width} height={this.height} ref={this.myRef}\n               style={{display: 'block', margin: 'auto'}}>\n          </svg>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default MunkerIllusion;\n\n\n\n// WEBPACK FOOTER //\n// webpack:///src/MunkerIllusion.jsx","module.exports = function(module) {\r\n\tif (!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif (!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// webpack:///(webpack)/buildin/module.js","\n/**\n * @license\n *\n * chroma.js - JavaScript library for color conversions\n * \n * Copyright (c) 2011-2017, Gregor Aisch\n * All rights reserved.\n * \n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n * \n * 1. Redistributions of source code must retain the above copyright notice, this\n *    list of conditions and the following disclaimer.\n * \n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n * \n * 3. The name Gregor Aisch may not be used to endorse or promote products\n *    derived from this software without specific prior written permission.\n * \n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL GREGOR AISCH OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n */\n\n(function() {\n  var Color, DEG2RAD, LAB_CONSTANTS, PI, PITHIRD, RAD2DEG, TWOPI, _average_lrgb, _guess_formats, _guess_formats_sorted, _input, _interpolators, abs, atan2, bezier, blend, blend_f, brewer, burn, chroma, clip_rgb, cmyk2rgb, colors, cos, css2rgb, darken, dodge, each, floor, hcg2rgb, hex2rgb, hsi2rgb, hsl2css, hsl2rgb, hsv2rgb, interpolate, interpolate_hsx, interpolate_lab, interpolate_lrgb, interpolate_num, interpolate_rgb, lab2lch, lab2rgb, lab_xyz, lch2lab, lch2rgb, lighten, limit, log, luminance_x, m, max, multiply, normal, num2rgb, overlay, pow, rgb2cmyk, rgb2css, rgb2hcg, rgb2hex, rgb2hsi, rgb2hsl, rgb2hsv, rgb2lab, rgb2lch, rgb2luminance, rgb2num, rgb2temperature, rgb2xyz, rgb_xyz, rnd, root, round, screen, sin, sqrt, temperature2rgb, type, unpack, w3cx11, xyz_lab, xyz_rgb,\n    slice = [].slice;\n\n  type = (function() {\n\n    /*\n    for browser-safe type checking+\n    ported from jQuery's $.type\n     */\n    var classToType, len, name, o, ref;\n    classToType = {};\n    ref = \"Boolean Number String Function Array Date RegExp Undefined Null\".split(\" \");\n    for (o = 0, len = ref.length; o < len; o++) {\n      name = ref[o];\n      classToType[\"[object \" + name + \"]\"] = name.toLowerCase();\n    }\n    return function(obj) {\n      var strType;\n      strType = Object.prototype.toString.call(obj);\n      return classToType[strType] || \"object\";\n    };\n  })();\n\n  limit = function(x, min, max) {\n    if (min == null) {\n      min = 0;\n    }\n    if (max == null) {\n      max = 1;\n    }\n    if (x < min) {\n      x = min;\n    }\n    if (x > max) {\n      x = max;\n    }\n    return x;\n  };\n\n  unpack = function(args) {\n    if (args.length >= 3) {\n      return Array.prototype.slice.call(args);\n    } else {\n      return args[0];\n    }\n  };\n\n  clip_rgb = function(rgb) {\n    var i, o;\n    rgb._clipped = false;\n    rgb._unclipped = rgb.slice(0);\n    for (i = o = 0; o < 3; i = ++o) {\n      if (i < 3) {\n        if (rgb[i] < 0 || rgb[i] > 255) {\n          rgb._clipped = true;\n        }\n        if (rgb[i] < 0) {\n          rgb[i] = 0;\n        }\n        if (rgb[i] > 255) {\n          rgb[i] = 255;\n        }\n      } else if (i === 3) {\n        if (rgb[i] < 0) {\n          rgb[i] = 0;\n        }\n        if (rgb[i] > 1) {\n          rgb[i] = 1;\n        }\n      }\n    }\n    if (!rgb._clipped) {\n      delete rgb._unclipped;\n    }\n    return rgb;\n  };\n\n  PI = Math.PI, round = Math.round, cos = Math.cos, floor = Math.floor, pow = Math.pow, log = Math.log, sin = Math.sin, sqrt = Math.sqrt, atan2 = Math.atan2, max = Math.max, abs = Math.abs;\n\n  TWOPI = PI * 2;\n\n  PITHIRD = PI / 3;\n\n  DEG2RAD = PI / 180;\n\n  RAD2DEG = 180 / PI;\n\n  chroma = function() {\n    if (arguments[0] instanceof Color) {\n      return arguments[0];\n    }\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, arguments, function(){});\n  };\n\n  chroma[\"default\"] = chroma;\n\n  _interpolators = [];\n\n  if ((typeof module !== \"undefined\" && module !== null) && (module.exports != null)) {\n    module.exports = chroma;\n  }\n\n  if (typeof define === 'function' && define.amd) {\n    define([], function() {\n      return chroma;\n    });\n  } else {\n    root = typeof exports !== \"undefined\" && exports !== null ? exports : this;\n    root.chroma = chroma;\n  }\n\n  chroma.version = '1.3.7';\n\n  _input = {};\n\n  _guess_formats = [];\n\n  _guess_formats_sorted = false;\n\n  Color = (function() {\n    function Color() {\n      var arg, args, chk, len, len1, me, mode, o, w;\n      me = this;\n      args = [];\n      for (o = 0, len = arguments.length; o < len; o++) {\n        arg = arguments[o];\n        if (arg != null) {\n          args.push(arg);\n        }\n      }\n      if (args.length > 1) {\n        mode = args[args.length - 1];\n      }\n      if (_input[mode] != null) {\n        me._rgb = clip_rgb(_input[mode](unpack(args.slice(0, -1))));\n      } else {\n        if (!_guess_formats_sorted) {\n          _guess_formats = _guess_formats.sort(function(a, b) {\n            return b.p - a.p;\n          });\n          _guess_formats_sorted = true;\n        }\n        for (w = 0, len1 = _guess_formats.length; w < len1; w++) {\n          chk = _guess_formats[w];\n          mode = chk.test.apply(chk, args);\n          if (mode) {\n            break;\n          }\n        }\n        if (mode) {\n          me._rgb = clip_rgb(_input[mode].apply(_input, args));\n        }\n      }\n      if (me._rgb == null) {\n        console.warn('unknown format: ' + args);\n      }\n      if (me._rgb == null) {\n        me._rgb = [0, 0, 0];\n      }\n      if (me._rgb.length === 3) {\n        me._rgb.push(1);\n      }\n    }\n\n    Color.prototype.toString = function() {\n      return this.hex();\n    };\n\n    Color.prototype.clone = function() {\n      return chroma(me._rgb);\n    };\n\n    return Color;\n\n  })();\n\n  chroma._input = _input;\n\n\n  /**\n  \tColorBrewer colors for chroma.js\n  \n  \tCopyright (c) 2002 Cynthia Brewer, Mark Harrower, and The \n  \tPennsylvania State University.\n  \n  \tLicensed under the Apache License, Version 2.0 (the \"License\"); \n  \tyou may not use this file except in compliance with the License.\n  \tYou may obtain a copy of the License at\t\n  \thttp://www.apache.org/licenses/LICENSE-2.0\n  \n  \tUnless required by applicable law or agreed to in writing, software distributed\n  \tunder the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n  \tCONDITIONS OF ANY KIND, either express or implied. See the License for the\n  \tspecific language governing permissions and limitations under the License.\n  \n      @preserve\n   */\n\n  chroma.brewer = brewer = {\n    OrRd: ['#fff7ec', '#fee8c8', '#fdd49e', '#fdbb84', '#fc8d59', '#ef6548', '#d7301f', '#b30000', '#7f0000'],\n    PuBu: ['#fff7fb', '#ece7f2', '#d0d1e6', '#a6bddb', '#74a9cf', '#3690c0', '#0570b0', '#045a8d', '#023858'],\n    BuPu: ['#f7fcfd', '#e0ecf4', '#bfd3e6', '#9ebcda', '#8c96c6', '#8c6bb1', '#88419d', '#810f7c', '#4d004b'],\n    Oranges: ['#fff5eb', '#fee6ce', '#fdd0a2', '#fdae6b', '#fd8d3c', '#f16913', '#d94801', '#a63603', '#7f2704'],\n    BuGn: ['#f7fcfd', '#e5f5f9', '#ccece6', '#99d8c9', '#66c2a4', '#41ae76', '#238b45', '#006d2c', '#00441b'],\n    YlOrBr: ['#ffffe5', '#fff7bc', '#fee391', '#fec44f', '#fe9929', '#ec7014', '#cc4c02', '#993404', '#662506'],\n    YlGn: ['#ffffe5', '#f7fcb9', '#d9f0a3', '#addd8e', '#78c679', '#41ab5d', '#238443', '#006837', '#004529'],\n    Reds: ['#fff5f0', '#fee0d2', '#fcbba1', '#fc9272', '#fb6a4a', '#ef3b2c', '#cb181d', '#a50f15', '#67000d'],\n    RdPu: ['#fff7f3', '#fde0dd', '#fcc5c0', '#fa9fb5', '#f768a1', '#dd3497', '#ae017e', '#7a0177', '#49006a'],\n    Greens: ['#f7fcf5', '#e5f5e0', '#c7e9c0', '#a1d99b', '#74c476', '#41ab5d', '#238b45', '#006d2c', '#00441b'],\n    YlGnBu: ['#ffffd9', '#edf8b1', '#c7e9b4', '#7fcdbb', '#41b6c4', '#1d91c0', '#225ea8', '#253494', '#081d58'],\n    Purples: ['#fcfbfd', '#efedf5', '#dadaeb', '#bcbddc', '#9e9ac8', '#807dba', '#6a51a3', '#54278f', '#3f007d'],\n    GnBu: ['#f7fcf0', '#e0f3db', '#ccebc5', '#a8ddb5', '#7bccc4', '#4eb3d3', '#2b8cbe', '#0868ac', '#084081'],\n    Greys: ['#ffffff', '#f0f0f0', '#d9d9d9', '#bdbdbd', '#969696', '#737373', '#525252', '#252525', '#000000'],\n    YlOrRd: ['#ffffcc', '#ffeda0', '#fed976', '#feb24c', '#fd8d3c', '#fc4e2a', '#e31a1c', '#bd0026', '#800026'],\n    PuRd: ['#f7f4f9', '#e7e1ef', '#d4b9da', '#c994c7', '#df65b0', '#e7298a', '#ce1256', '#980043', '#67001f'],\n    Blues: ['#f7fbff', '#deebf7', '#c6dbef', '#9ecae1', '#6baed6', '#4292c6', '#2171b5', '#08519c', '#08306b'],\n    PuBuGn: ['#fff7fb', '#ece2f0', '#d0d1e6', '#a6bddb', '#67a9cf', '#3690c0', '#02818a', '#016c59', '#014636'],\n    Viridis: ['#440154', '#482777', '#3f4a8a', '#31678e', '#26838f', '#1f9d8a', '#6cce5a', '#b6de2b', '#fee825'],\n    Spectral: ['#9e0142', '#d53e4f', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#e6f598', '#abdda4', '#66c2a5', '#3288bd', '#5e4fa2'],\n    RdYlGn: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#d9ef8b', '#a6d96a', '#66bd63', '#1a9850', '#006837'],\n    RdBu: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#f7f7f7', '#d1e5f0', '#92c5de', '#4393c3', '#2166ac', '#053061'],\n    PiYG: ['#8e0152', '#c51b7d', '#de77ae', '#f1b6da', '#fde0ef', '#f7f7f7', '#e6f5d0', '#b8e186', '#7fbc41', '#4d9221', '#276419'],\n    PRGn: ['#40004b', '#762a83', '#9970ab', '#c2a5cf', '#e7d4e8', '#f7f7f7', '#d9f0d3', '#a6dba0', '#5aae61', '#1b7837', '#00441b'],\n    RdYlBu: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee090', '#ffffbf', '#e0f3f8', '#abd9e9', '#74add1', '#4575b4', '#313695'],\n    BrBG: ['#543005', '#8c510a', '#bf812d', '#dfc27d', '#f6e8c3', '#f5f5f5', '#c7eae5', '#80cdc1', '#35978f', '#01665e', '#003c30'],\n    RdGy: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#ffffff', '#e0e0e0', '#bababa', '#878787', '#4d4d4d', '#1a1a1a'],\n    PuOr: ['#7f3b08', '#b35806', '#e08214', '#fdb863', '#fee0b6', '#f7f7f7', '#d8daeb', '#b2abd2', '#8073ac', '#542788', '#2d004b'],\n    Set2: ['#66c2a5', '#fc8d62', '#8da0cb', '#e78ac3', '#a6d854', '#ffd92f', '#e5c494', '#b3b3b3'],\n    Accent: ['#7fc97f', '#beaed4', '#fdc086', '#ffff99', '#386cb0', '#f0027f', '#bf5b17', '#666666'],\n    Set1: ['#e41a1c', '#377eb8', '#4daf4a', '#984ea3', '#ff7f00', '#ffff33', '#a65628', '#f781bf', '#999999'],\n    Set3: ['#8dd3c7', '#ffffb3', '#bebada', '#fb8072', '#80b1d3', '#fdb462', '#b3de69', '#fccde5', '#d9d9d9', '#bc80bd', '#ccebc5', '#ffed6f'],\n    Dark2: ['#1b9e77', '#d95f02', '#7570b3', '#e7298a', '#66a61e', '#e6ab02', '#a6761d', '#666666'],\n    Paired: ['#a6cee3', '#1f78b4', '#b2df8a', '#33a02c', '#fb9a99', '#e31a1c', '#fdbf6f', '#ff7f00', '#cab2d6', '#6a3d9a', '#ffff99', '#b15928'],\n    Pastel2: ['#b3e2cd', '#fdcdac', '#cbd5e8', '#f4cae4', '#e6f5c9', '#fff2ae', '#f1e2cc', '#cccccc'],\n    Pastel1: ['#fbb4ae', '#b3cde3', '#ccebc5', '#decbe4', '#fed9a6', '#ffffcc', '#e5d8bd', '#fddaec', '#f2f2f2']\n  };\n\n  (function() {\n    var key, results;\n    results = [];\n    for (key in brewer) {\n      results.push(brewer[key.toLowerCase()] = brewer[key]);\n    }\n    return results;\n  })();\n\n\n  /**\n  \tX11 color names\n  \n  \thttp://www.w3.org/TR/css3-color/#svg-color\n   */\n\n  w3cx11 = {\n    aliceblue: '#f0f8ff',\n    antiquewhite: '#faebd7',\n    aqua: '#00ffff',\n    aquamarine: '#7fffd4',\n    azure: '#f0ffff',\n    beige: '#f5f5dc',\n    bisque: '#ffe4c4',\n    black: '#000000',\n    blanchedalmond: '#ffebcd',\n    blue: '#0000ff',\n    blueviolet: '#8a2be2',\n    brown: '#a52a2a',\n    burlywood: '#deb887',\n    cadetblue: '#5f9ea0',\n    chartreuse: '#7fff00',\n    chocolate: '#d2691e',\n    coral: '#ff7f50',\n    cornflower: '#6495ed',\n    cornflowerblue: '#6495ed',\n    cornsilk: '#fff8dc',\n    crimson: '#dc143c',\n    cyan: '#00ffff',\n    darkblue: '#00008b',\n    darkcyan: '#008b8b',\n    darkgoldenrod: '#b8860b',\n    darkgray: '#a9a9a9',\n    darkgreen: '#006400',\n    darkgrey: '#a9a9a9',\n    darkkhaki: '#bdb76b',\n    darkmagenta: '#8b008b',\n    darkolivegreen: '#556b2f',\n    darkorange: '#ff8c00',\n    darkorchid: '#9932cc',\n    darkred: '#8b0000',\n    darksalmon: '#e9967a',\n    darkseagreen: '#8fbc8f',\n    darkslateblue: '#483d8b',\n    darkslategray: '#2f4f4f',\n    darkslategrey: '#2f4f4f',\n    darkturquoise: '#00ced1',\n    darkviolet: '#9400d3',\n    deeppink: '#ff1493',\n    deepskyblue: '#00bfff',\n    dimgray: '#696969',\n    dimgrey: '#696969',\n    dodgerblue: '#1e90ff',\n    firebrick: '#b22222',\n    floralwhite: '#fffaf0',\n    forestgreen: '#228b22',\n    fuchsia: '#ff00ff',\n    gainsboro: '#dcdcdc',\n    ghostwhite: '#f8f8ff',\n    gold: '#ffd700',\n    goldenrod: '#daa520',\n    gray: '#808080',\n    green: '#008000',\n    greenyellow: '#adff2f',\n    grey: '#808080',\n    honeydew: '#f0fff0',\n    hotpink: '#ff69b4',\n    indianred: '#cd5c5c',\n    indigo: '#4b0082',\n    ivory: '#fffff0',\n    khaki: '#f0e68c',\n    laserlemon: '#ffff54',\n    lavender: '#e6e6fa',\n    lavenderblush: '#fff0f5',\n    lawngreen: '#7cfc00',\n    lemonchiffon: '#fffacd',\n    lightblue: '#add8e6',\n    lightcoral: '#f08080',\n    lightcyan: '#e0ffff',\n    lightgoldenrod: '#fafad2',\n    lightgoldenrodyellow: '#fafad2',\n    lightgray: '#d3d3d3',\n    lightgreen: '#90ee90',\n    lightgrey: '#d3d3d3',\n    lightpink: '#ffb6c1',\n    lightsalmon: '#ffa07a',\n    lightseagreen: '#20b2aa',\n    lightskyblue: '#87cefa',\n    lightslategray: '#778899',\n    lightslategrey: '#778899',\n    lightsteelblue: '#b0c4de',\n    lightyellow: '#ffffe0',\n    lime: '#00ff00',\n    limegreen: '#32cd32',\n    linen: '#faf0e6',\n    magenta: '#ff00ff',\n    maroon: '#800000',\n    maroon2: '#7f0000',\n    maroon3: '#b03060',\n    mediumaquamarine: '#66cdaa',\n    mediumblue: '#0000cd',\n    mediumorchid: '#ba55d3',\n    mediumpurple: '#9370db',\n    mediumseagreen: '#3cb371',\n    mediumslateblue: '#7b68ee',\n    mediumspringgreen: '#00fa9a',\n    mediumturquoise: '#48d1cc',\n    mediumvioletred: '#c71585',\n    midnightblue: '#191970',\n    mintcream: '#f5fffa',\n    mistyrose: '#ffe4e1',\n    moccasin: '#ffe4b5',\n    navajowhite: '#ffdead',\n    navy: '#000080',\n    oldlace: '#fdf5e6',\n    olive: '#808000',\n    olivedrab: '#6b8e23',\n    orange: '#ffa500',\n    orangered: '#ff4500',\n    orchid: '#da70d6',\n    palegoldenrod: '#eee8aa',\n    palegreen: '#98fb98',\n    paleturquoise: '#afeeee',\n    palevioletred: '#db7093',\n    papayawhip: '#ffefd5',\n    peachpuff: '#ffdab9',\n    peru: '#cd853f',\n    pink: '#ffc0cb',\n    plum: '#dda0dd',\n    powderblue: '#b0e0e6',\n    purple: '#800080',\n    purple2: '#7f007f',\n    purple3: '#a020f0',\n    rebeccapurple: '#663399',\n    red: '#ff0000',\n    rosybrown: '#bc8f8f',\n    royalblue: '#4169e1',\n    saddlebrown: '#8b4513',\n    salmon: '#fa8072',\n    sandybrown: '#f4a460',\n    seagreen: '#2e8b57',\n    seashell: '#fff5ee',\n    sienna: '#a0522d',\n    silver: '#c0c0c0',\n    skyblue: '#87ceeb',\n    slateblue: '#6a5acd',\n    slategray: '#708090',\n    slategrey: '#708090',\n    snow: '#fffafa',\n    springgreen: '#00ff7f',\n    steelblue: '#4682b4',\n    tan: '#d2b48c',\n    teal: '#008080',\n    thistle: '#d8bfd8',\n    tomato: '#ff6347',\n    turquoise: '#40e0d0',\n    violet: '#ee82ee',\n    wheat: '#f5deb3',\n    white: '#ffffff',\n    whitesmoke: '#f5f5f5',\n    yellow: '#ffff00',\n    yellowgreen: '#9acd32'\n  };\n\n  chroma.colors = colors = w3cx11;\n\n  lab2rgb = function() {\n    var a, args, b, g, l, r, x, y, z;\n    args = unpack(arguments);\n    l = args[0], a = args[1], b = args[2];\n    y = (l + 16) / 116;\n    x = isNaN(a) ? y : y + a / 500;\n    z = isNaN(b) ? y : y - b / 200;\n    y = LAB_CONSTANTS.Yn * lab_xyz(y);\n    x = LAB_CONSTANTS.Xn * lab_xyz(x);\n    z = LAB_CONSTANTS.Zn * lab_xyz(z);\n    r = xyz_rgb(3.2404542 * x - 1.5371385 * y - 0.4985314 * z);\n    g = xyz_rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z);\n    b = xyz_rgb(0.0556434 * x - 0.2040259 * y + 1.0572252 * z);\n    return [r, g, b, args.length > 3 ? args[3] : 1];\n  };\n\n  xyz_rgb = function(r) {\n    return 255 * (r <= 0.00304 ? 12.92 * r : 1.055 * pow(r, 1 / 2.4) - 0.055);\n  };\n\n  lab_xyz = function(t) {\n    if (t > LAB_CONSTANTS.t1) {\n      return t * t * t;\n    } else {\n      return LAB_CONSTANTS.t2 * (t - LAB_CONSTANTS.t0);\n    }\n  };\n\n  LAB_CONSTANTS = {\n    Kn: 18,\n    Xn: 0.950470,\n    Yn: 1,\n    Zn: 1.088830,\n    t0: 0.137931034,\n    t1: 0.206896552,\n    t2: 0.12841855,\n    t3: 0.008856452\n  };\n\n  rgb2lab = function() {\n    var b, g, r, ref, ref1, x, y, z;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    ref1 = rgb2xyz(r, g, b), x = ref1[0], y = ref1[1], z = ref1[2];\n    return [116 * y - 16, 500 * (x - y), 200 * (y - z)];\n  };\n\n  rgb_xyz = function(r) {\n    if ((r /= 255) <= 0.04045) {\n      return r / 12.92;\n    } else {\n      return pow((r + 0.055) / 1.055, 2.4);\n    }\n  };\n\n  xyz_lab = function(t) {\n    if (t > LAB_CONSTANTS.t3) {\n      return pow(t, 1 / 3);\n    } else {\n      return t / LAB_CONSTANTS.t2 + LAB_CONSTANTS.t0;\n    }\n  };\n\n  rgb2xyz = function() {\n    var b, g, r, ref, x, y, z;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    r = rgb_xyz(r);\n    g = rgb_xyz(g);\n    b = rgb_xyz(b);\n    x = xyz_lab((0.4124564 * r + 0.3575761 * g + 0.1804375 * b) / LAB_CONSTANTS.Xn);\n    y = xyz_lab((0.2126729 * r + 0.7151522 * g + 0.0721750 * b) / LAB_CONSTANTS.Yn);\n    z = xyz_lab((0.0193339 * r + 0.1191920 * g + 0.9503041 * b) / LAB_CONSTANTS.Zn);\n    return [x, y, z];\n  };\n\n  chroma.lab = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['lab']), function(){});\n  };\n\n  _input.lab = lab2rgb;\n\n  Color.prototype.lab = function() {\n    return rgb2lab(this._rgb);\n  };\n\n  bezier = function(colors) {\n    var I, I0, I1, c, lab0, lab1, lab2, lab3, ref, ref1, ref2;\n    colors = (function() {\n      var len, o, results;\n      results = [];\n      for (o = 0, len = colors.length; o < len; o++) {\n        c = colors[o];\n        results.push(chroma(c));\n      }\n      return results;\n    })();\n    if (colors.length === 2) {\n      ref = (function() {\n        var len, o, results;\n        results = [];\n        for (o = 0, len = colors.length; o < len; o++) {\n          c = colors[o];\n          results.push(c.lab());\n        }\n        return results;\n      })(), lab0 = ref[0], lab1 = ref[1];\n      I = function(t) {\n        var i, lab;\n        lab = (function() {\n          var o, results;\n          results = [];\n          for (i = o = 0; o <= 2; i = ++o) {\n            results.push(lab0[i] + t * (lab1[i] - lab0[i]));\n          }\n          return results;\n        })();\n        return chroma.lab.apply(chroma, lab);\n      };\n    } else if (colors.length === 3) {\n      ref1 = (function() {\n        var len, o, results;\n        results = [];\n        for (o = 0, len = colors.length; o < len; o++) {\n          c = colors[o];\n          results.push(c.lab());\n        }\n        return results;\n      })(), lab0 = ref1[0], lab1 = ref1[1], lab2 = ref1[2];\n      I = function(t) {\n        var i, lab;\n        lab = (function() {\n          var o, results;\n          results = [];\n          for (i = o = 0; o <= 2; i = ++o) {\n            results.push((1 - t) * (1 - t) * lab0[i] + 2 * (1 - t) * t * lab1[i] + t * t * lab2[i]);\n          }\n          return results;\n        })();\n        return chroma.lab.apply(chroma, lab);\n      };\n    } else if (colors.length === 4) {\n      ref2 = (function() {\n        var len, o, results;\n        results = [];\n        for (o = 0, len = colors.length; o < len; o++) {\n          c = colors[o];\n          results.push(c.lab());\n        }\n        return results;\n      })(), lab0 = ref2[0], lab1 = ref2[1], lab2 = ref2[2], lab3 = ref2[3];\n      I = function(t) {\n        var i, lab;\n        lab = (function() {\n          var o, results;\n          results = [];\n          for (i = o = 0; o <= 2; i = ++o) {\n            results.push((1 - t) * (1 - t) * (1 - t) * lab0[i] + 3 * (1 - t) * (1 - t) * t * lab1[i] + 3 * (1 - t) * t * t * lab2[i] + t * t * t * lab3[i]);\n          }\n          return results;\n        })();\n        return chroma.lab.apply(chroma, lab);\n      };\n    } else if (colors.length === 5) {\n      I0 = bezier(colors.slice(0, 3));\n      I1 = bezier(colors.slice(2, 5));\n      I = function(t) {\n        if (t < 0.5) {\n          return I0(t * 2);\n        } else {\n          return I1((t - 0.5) * 2);\n        }\n      };\n    }\n    return I;\n  };\n\n  chroma.bezier = function(colors) {\n    var f;\n    f = bezier(colors);\n    f.scale = function() {\n      return chroma.scale(f);\n    };\n    return f;\n  };\n\n\n  /*\n      chroma.js\n  \n      Copyright (c) 2011-2013, Gregor Aisch\n      All rights reserved.\n  \n      Redistribution and use in source and binary forms, with or without\n      modification, are permitted provided that the following conditions are met:\n  \n      * Redistributions of source code must retain the above copyright notice, this\n        list of conditions and the following disclaimer.\n  \n      * Redistributions in binary form must reproduce the above copyright notice,\n        this list of conditions and the following disclaimer in the documentation\n        and/or other materials provided with the distribution.\n  \n      * The name Gregor Aisch may not be used to endorse or promote products\n        derived from this software without specific prior written permission.\n  \n      THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n      AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n      IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n      DISCLAIMED. IN NO EVENT SHALL GREGOR AISCH OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n      INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n      BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n      DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n      OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n      NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n      EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  \n      @source: https://github.com/gka/chroma.js\n   */\n\n  chroma.cubehelix = function(start, rotations, hue, gamma, lightness) {\n    var dh, dl, f;\n    if (start == null) {\n      start = 300;\n    }\n    if (rotations == null) {\n      rotations = -1.5;\n    }\n    if (hue == null) {\n      hue = 1;\n    }\n    if (gamma == null) {\n      gamma = 1;\n    }\n    if (lightness == null) {\n      lightness = [0, 1];\n    }\n    dh = 0;\n    if (type(lightness) === 'array') {\n      dl = lightness[1] - lightness[0];\n    } else {\n      dl = 0;\n      lightness = [lightness, lightness];\n    }\n    f = function(fract) {\n      var a, amp, b, cos_a, g, h, l, r, sin_a;\n      a = TWOPI * ((start + 120) / 360 + rotations * fract);\n      l = pow(lightness[0] + dl * fract, gamma);\n      h = dh !== 0 ? hue[0] + fract * dh : hue;\n      amp = h * l * (1 - l) / 2;\n      cos_a = cos(a);\n      sin_a = sin(a);\n      r = l + amp * (-0.14861 * cos_a + 1.78277 * sin_a);\n      g = l + amp * (-0.29227 * cos_a - 0.90649 * sin_a);\n      b = l + amp * (+1.97294 * cos_a);\n      return chroma(clip_rgb([r * 255, g * 255, b * 255]));\n    };\n    f.start = function(s) {\n      if (s == null) {\n        return start;\n      }\n      start = s;\n      return f;\n    };\n    f.rotations = function(r) {\n      if (r == null) {\n        return rotations;\n      }\n      rotations = r;\n      return f;\n    };\n    f.gamma = function(g) {\n      if (g == null) {\n        return gamma;\n      }\n      gamma = g;\n      return f;\n    };\n    f.hue = function(h) {\n      if (h == null) {\n        return hue;\n      }\n      hue = h;\n      if (type(hue) === 'array') {\n        dh = hue[1] - hue[0];\n        if (dh === 0) {\n          hue = hue[1];\n        }\n      } else {\n        dh = 0;\n      }\n      return f;\n    };\n    f.lightness = function(h) {\n      if (h == null) {\n        return lightness;\n      }\n      if (type(h) === 'array') {\n        lightness = h;\n        dl = h[1] - h[0];\n      } else {\n        lightness = [h, h];\n        dl = 0;\n      }\n      return f;\n    };\n    f.scale = function() {\n      return chroma.scale(f);\n    };\n    f.hue(hue);\n    return f;\n  };\n\n  chroma.random = function() {\n    var code, digits, i, o;\n    digits = '0123456789abcdef';\n    code = '#';\n    for (i = o = 0; o < 6; i = ++o) {\n      code += digits.charAt(floor(Math.random() * 16));\n    }\n    return new Color(code);\n  };\n\n  _interpolators = [];\n\n  interpolate = function(col1, col2, f, m) {\n    var interpol, len, o, res;\n    if (f == null) {\n      f = 0.5;\n    }\n    if (m == null) {\n      m = 'rgb';\n    }\n\n    /*\n    interpolates between colors\n    f = 0 --> me\n    f = 1 --> col\n     */\n    if (type(col1) !== 'object') {\n      col1 = chroma(col1);\n    }\n    if (type(col2) !== 'object') {\n      col2 = chroma(col2);\n    }\n    for (o = 0, len = _interpolators.length; o < len; o++) {\n      interpol = _interpolators[o];\n      if (m === interpol[0]) {\n        res = interpol[1](col1, col2, f, m);\n        break;\n      }\n    }\n    if (res == null) {\n      throw \"color mode \" + m + \" is not supported\";\n    }\n    return res.alpha(col1.alpha() + f * (col2.alpha() - col1.alpha()));\n  };\n\n  chroma.interpolate = interpolate;\n\n  Color.prototype.interpolate = function(col2, f, m) {\n    return interpolate(this, col2, f, m);\n  };\n\n  chroma.mix = interpolate;\n\n  Color.prototype.mix = Color.prototype.interpolate;\n\n  _input.rgb = function() {\n    var k, ref, results, v;\n    ref = unpack(arguments);\n    results = [];\n    for (k in ref) {\n      v = ref[k];\n      results.push(v);\n    }\n    return results;\n  };\n\n  chroma.rgb = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['rgb']), function(){});\n  };\n\n  Color.prototype.rgb = function(round) {\n    if (round == null) {\n      round = true;\n    }\n    if (round) {\n      return this._rgb.map(Math.round).slice(0, 3);\n    } else {\n      return this._rgb.slice(0, 3);\n    }\n  };\n\n  Color.prototype.rgba = function(round) {\n    if (round == null) {\n      round = true;\n    }\n    if (!round) {\n      return this._rgb.slice(0);\n    }\n    return [Math.round(this._rgb[0]), Math.round(this._rgb[1]), Math.round(this._rgb[2]), this._rgb[3]];\n  };\n\n  _guess_formats.push({\n    p: 3,\n    test: function(n) {\n      var a;\n      a = unpack(arguments);\n      if (type(a) === 'array' && a.length === 3) {\n        return 'rgb';\n      }\n      if (a.length === 4 && type(a[3]) === \"number\" && a[3] >= 0 && a[3] <= 1) {\n        return 'rgb';\n      }\n    }\n  });\n\n  _input.lrgb = _input.rgb;\n\n  interpolate_lrgb = function(col1, col2, f, m) {\n    var xyz0, xyz1;\n    xyz0 = col1._rgb;\n    xyz1 = col2._rgb;\n    return new Color(sqrt(pow(xyz0[0], 2) * (1 - f) + pow(xyz1[0], 2) * f), sqrt(pow(xyz0[1], 2) * (1 - f) + pow(xyz1[1], 2) * f), sqrt(pow(xyz0[2], 2) * (1 - f) + pow(xyz1[2], 2) * f), m);\n  };\n\n  _average_lrgb = function(colors) {\n    var col, f, len, o, rgb, xyz;\n    f = 1 / colors.length;\n    xyz = [0, 0, 0, 0];\n    for (o = 0, len = colors.length; o < len; o++) {\n      col = colors[o];\n      rgb = col._rgb;\n      xyz[0] += pow(rgb[0], 2) * f;\n      xyz[1] += pow(rgb[1], 2) * f;\n      xyz[2] += pow(rgb[2], 2) * f;\n      xyz[3] += rgb[3] * f;\n    }\n    xyz[0] = sqrt(xyz[0]);\n    xyz[1] = sqrt(xyz[1]);\n    xyz[2] = sqrt(xyz[2]);\n    return new Color(xyz);\n  };\n\n  _interpolators.push(['lrgb', interpolate_lrgb]);\n\n  chroma.average = function(colors, mode) {\n    var A, alpha, c, cnt, dx, dy, first, i, l, len, o, xyz, xyz2;\n    if (mode == null) {\n      mode = 'rgb';\n    }\n    l = colors.length;\n    colors = colors.map(function(c) {\n      return chroma(c);\n    });\n    first = colors.splice(0, 1)[0];\n    if (mode === 'lrgb') {\n      return _average_lrgb(colors);\n    }\n    xyz = first.get(mode);\n    cnt = [];\n    dx = 0;\n    dy = 0;\n    for (i in xyz) {\n      xyz[i] = xyz[i] || 0;\n      cnt.push(isNaN(xyz[i]) ? 0 : 1);\n      if (mode.charAt(i) === 'h' && !isNaN(xyz[i])) {\n        A = xyz[i] / 180 * PI;\n        dx += cos(A);\n        dy += sin(A);\n      }\n    }\n    alpha = first.alpha();\n    for (o = 0, len = colors.length; o < len; o++) {\n      c = colors[o];\n      xyz2 = c.get(mode);\n      alpha += c.alpha();\n      for (i in xyz) {\n        if (!isNaN(xyz2[i])) {\n          cnt[i] += 1;\n          if (mode.charAt(i) === 'h') {\n            A = xyz2[i] / 180 * PI;\n            dx += cos(A);\n            dy += sin(A);\n          } else {\n            xyz[i] += xyz2[i];\n          }\n        }\n      }\n    }\n    for (i in xyz) {\n      if (mode.charAt(i) === 'h') {\n        A = atan2(dy / cnt[i], dx / cnt[i]) / PI * 180;\n        while (A < 0) {\n          A += 360;\n        }\n        while (A >= 360) {\n          A -= 360;\n        }\n        xyz[i] = A;\n      } else {\n        xyz[i] = xyz[i] / cnt[i];\n      }\n    }\n    return chroma(xyz, mode).alpha(alpha / l);\n  };\n\n  hex2rgb = function(hex) {\n    var a, b, g, r, rgb, u;\n    if (hex.match(/^#?([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/)) {\n      if (hex.length === 4 || hex.length === 7) {\n        hex = hex.substr(1);\n      }\n      if (hex.length === 3) {\n        hex = hex.split(\"\");\n        hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\n      }\n      u = parseInt(hex, 16);\n      r = u >> 16;\n      g = u >> 8 & 0xFF;\n      b = u & 0xFF;\n      return [r, g, b, 1];\n    }\n    if (hex.match(/^#?([A-Fa-f0-9]{8})$/)) {\n      if (hex.length === 9) {\n        hex = hex.substr(1);\n      }\n      u = parseInt(hex, 16);\n      r = u >> 24 & 0xFF;\n      g = u >> 16 & 0xFF;\n      b = u >> 8 & 0xFF;\n      a = round((u & 0xFF) / 0xFF * 100) / 100;\n      return [r, g, b, a];\n    }\n    if ((_input.css != null) && (rgb = _input.css(hex))) {\n      return rgb;\n    }\n    throw \"unknown color: \" + hex;\n  };\n\n  rgb2hex = function(channels, mode) {\n    var a, b, g, hxa, r, str, u;\n    if (mode == null) {\n      mode = 'rgb';\n    }\n    r = channels[0], g = channels[1], b = channels[2], a = channels[3];\n    r = Math.round(r);\n    g = Math.round(g);\n    b = Math.round(b);\n    u = r << 16 | g << 8 | b;\n    str = \"000000\" + u.toString(16);\n    str = str.substr(str.length - 6);\n    hxa = '0' + round(a * 255).toString(16);\n    hxa = hxa.substr(hxa.length - 2);\n    return \"#\" + (function() {\n      switch (mode.toLowerCase()) {\n        case 'rgba':\n          return str + hxa;\n        case 'argb':\n          return hxa + str;\n        default:\n          return str;\n      }\n    })();\n  };\n\n  _input.hex = function(h) {\n    return hex2rgb(h);\n  };\n\n  chroma.hex = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['hex']), function(){});\n  };\n\n  Color.prototype.hex = function(mode) {\n    if (mode == null) {\n      mode = 'rgb';\n    }\n    return rgb2hex(this._rgb, mode);\n  };\n\n  _guess_formats.push({\n    p: 4,\n    test: function(n) {\n      if (arguments.length === 1 && type(n) === \"string\") {\n        return 'hex';\n      }\n    }\n  });\n\n  hsl2rgb = function() {\n    var args, b, c, g, h, i, l, o, r, ref, s, t1, t2, t3;\n    args = unpack(arguments);\n    h = args[0], s = args[1], l = args[2];\n    if (s === 0) {\n      r = g = b = l * 255;\n    } else {\n      t3 = [0, 0, 0];\n      c = [0, 0, 0];\n      t2 = l < 0.5 ? l * (1 + s) : l + s - l * s;\n      t1 = 2 * l - t2;\n      h /= 360;\n      t3[0] = h + 1 / 3;\n      t3[1] = h;\n      t3[2] = h - 1 / 3;\n      for (i = o = 0; o <= 2; i = ++o) {\n        if (t3[i] < 0) {\n          t3[i] += 1;\n        }\n        if (t3[i] > 1) {\n          t3[i] -= 1;\n        }\n        if (6 * t3[i] < 1) {\n          c[i] = t1 + (t2 - t1) * 6 * t3[i];\n        } else if (2 * t3[i] < 1) {\n          c[i] = t2;\n        } else if (3 * t3[i] < 2) {\n          c[i] = t1 + (t2 - t1) * ((2 / 3) - t3[i]) * 6;\n        } else {\n          c[i] = t1;\n        }\n      }\n      ref = [round(c[0] * 255), round(c[1] * 255), round(c[2] * 255)], r = ref[0], g = ref[1], b = ref[2];\n    }\n    if (args.length > 3) {\n      return [r, g, b, args[3]];\n    } else {\n      return [r, g, b];\n    }\n  };\n\n  rgb2hsl = function(r, g, b) {\n    var h, l, min, ref, s;\n    if (r !== void 0 && r.length >= 3) {\n      ref = r, r = ref[0], g = ref[1], b = ref[2];\n    }\n    r /= 255;\n    g /= 255;\n    b /= 255;\n    min = Math.min(r, g, b);\n    max = Math.max(r, g, b);\n    l = (max + min) / 2;\n    if (max === min) {\n      s = 0;\n      h = Number.NaN;\n    } else {\n      s = l < 0.5 ? (max - min) / (max + min) : (max - min) / (2 - max - min);\n    }\n    if (r === max) {\n      h = (g - b) / (max - min);\n    } else if (g === max) {\n      h = 2 + (b - r) / (max - min);\n    } else if (b === max) {\n      h = 4 + (r - g) / (max - min);\n    }\n    h *= 60;\n    if (h < 0) {\n      h += 360;\n    }\n    return [h, s, l];\n  };\n\n  chroma.hsl = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['hsl']), function(){});\n  };\n\n  _input.hsl = hsl2rgb;\n\n  Color.prototype.hsl = function() {\n    return rgb2hsl(this._rgb);\n  };\n\n  hsv2rgb = function() {\n    var args, b, f, g, h, i, p, q, r, ref, ref1, ref2, ref3, ref4, ref5, s, t, v;\n    args = unpack(arguments);\n    h = args[0], s = args[1], v = args[2];\n    v *= 255;\n    if (s === 0) {\n      r = g = b = v;\n    } else {\n      if (h === 360) {\n        h = 0;\n      }\n      if (h > 360) {\n        h -= 360;\n      }\n      if (h < 0) {\n        h += 360;\n      }\n      h /= 60;\n      i = floor(h);\n      f = h - i;\n      p = v * (1 - s);\n      q = v * (1 - s * f);\n      t = v * (1 - s * (1 - f));\n      switch (i) {\n        case 0:\n          ref = [v, t, p], r = ref[0], g = ref[1], b = ref[2];\n          break;\n        case 1:\n          ref1 = [q, v, p], r = ref1[0], g = ref1[1], b = ref1[2];\n          break;\n        case 2:\n          ref2 = [p, v, t], r = ref2[0], g = ref2[1], b = ref2[2];\n          break;\n        case 3:\n          ref3 = [p, q, v], r = ref3[0], g = ref3[1], b = ref3[2];\n          break;\n        case 4:\n          ref4 = [t, p, v], r = ref4[0], g = ref4[1], b = ref4[2];\n          break;\n        case 5:\n          ref5 = [v, p, q], r = ref5[0], g = ref5[1], b = ref5[2];\n      }\n    }\n    return [r, g, b, args.length > 3 ? args[3] : 1];\n  };\n\n  rgb2hsv = function() {\n    var b, delta, g, h, min, r, ref, s, v;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    min = Math.min(r, g, b);\n    max = Math.max(r, g, b);\n    delta = max - min;\n    v = max / 255.0;\n    if (max === 0) {\n      h = Number.NaN;\n      s = 0;\n    } else {\n      s = delta / max;\n      if (r === max) {\n        h = (g - b) / delta;\n      }\n      if (g === max) {\n        h = 2 + (b - r) / delta;\n      }\n      if (b === max) {\n        h = 4 + (r - g) / delta;\n      }\n      h *= 60;\n      if (h < 0) {\n        h += 360;\n      }\n    }\n    return [h, s, v];\n  };\n\n  chroma.hsv = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['hsv']), function(){});\n  };\n\n  _input.hsv = hsv2rgb;\n\n  Color.prototype.hsv = function() {\n    return rgb2hsv(this._rgb);\n  };\n\n  num2rgb = function(num) {\n    var b, g, r;\n    if (type(num) === \"number\" && num >= 0 && num <= 0xFFFFFF) {\n      r = num >> 16;\n      g = (num >> 8) & 0xFF;\n      b = num & 0xFF;\n      return [r, g, b, 1];\n    }\n    console.warn(\"unknown num color: \" + num);\n    return [0, 0, 0, 1];\n  };\n\n  rgb2num = function() {\n    var b, g, r, ref;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    return (r << 16) + (g << 8) + b;\n  };\n\n  chroma.num = function(num) {\n    return new Color(num, 'num');\n  };\n\n  Color.prototype.num = function(mode) {\n    if (mode == null) {\n      mode = 'rgb';\n    }\n    return rgb2num(this._rgb, mode);\n  };\n\n  _input.num = num2rgb;\n\n  _guess_formats.push({\n    p: 1,\n    test: function(n) {\n      if (arguments.length === 1 && type(n) === \"number\" && n >= 0 && n <= 0xFFFFFF) {\n        return 'num';\n      }\n    }\n  });\n\n  hcg2rgb = function() {\n    var _c, _g, args, b, c, f, g, h, i, p, q, r, ref, ref1, ref2, ref3, ref4, ref5, t, v;\n    args = unpack(arguments);\n    h = args[0], c = args[1], _g = args[2];\n    c = c / 100;\n    g = g / 100 * 255;\n    _c = c * 255;\n    if (c === 0) {\n      r = g = b = _g;\n    } else {\n      if (h === 360) {\n        h = 0;\n      }\n      if (h > 360) {\n        h -= 360;\n      }\n      if (h < 0) {\n        h += 360;\n      }\n      h /= 60;\n      i = floor(h);\n      f = h - i;\n      p = _g * (1 - c);\n      q = p + _c * (1 - f);\n      t = p + _c * f;\n      v = p + _c;\n      switch (i) {\n        case 0:\n          ref = [v, t, p], r = ref[0], g = ref[1], b = ref[2];\n          break;\n        case 1:\n          ref1 = [q, v, p], r = ref1[0], g = ref1[1], b = ref1[2];\n          break;\n        case 2:\n          ref2 = [p, v, t], r = ref2[0], g = ref2[1], b = ref2[2];\n          break;\n        case 3:\n          ref3 = [p, q, v], r = ref3[0], g = ref3[1], b = ref3[2];\n          break;\n        case 4:\n          ref4 = [t, p, v], r = ref4[0], g = ref4[1], b = ref4[2];\n          break;\n        case 5:\n          ref5 = [v, p, q], r = ref5[0], g = ref5[1], b = ref5[2];\n      }\n    }\n    return [r, g, b, args.length > 3 ? args[3] : 1];\n  };\n\n  rgb2hcg = function() {\n    var _g, b, c, delta, g, h, min, r, ref;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    min = Math.min(r, g, b);\n    max = Math.max(r, g, b);\n    delta = max - min;\n    c = delta * 100 / 255;\n    _g = min / (255 - delta) * 100;\n    if (delta === 0) {\n      h = Number.NaN;\n    } else {\n      if (r === max) {\n        h = (g - b) / delta;\n      }\n      if (g === max) {\n        h = 2 + (b - r) / delta;\n      }\n      if (b === max) {\n        h = 4 + (r - g) / delta;\n      }\n      h *= 60;\n      if (h < 0) {\n        h += 360;\n      }\n    }\n    return [h, c, _g];\n  };\n\n  chroma.hcg = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['hcg']), function(){});\n  };\n\n  _input.hcg = hcg2rgb;\n\n  Color.prototype.hcg = function() {\n    return rgb2hcg(this._rgb);\n  };\n\n  css2rgb = function(css) {\n    var aa, ab, hsl, i, m, o, rgb, w;\n    css = css.toLowerCase();\n    if ((chroma.colors != null) && chroma.colors[css]) {\n      return hex2rgb(chroma.colors[css]);\n    }\n    if (m = css.match(/rgb\\(\\s*(\\-?\\d+),\\s*(\\-?\\d+)\\s*,\\s*(\\-?\\d+)\\s*\\)/)) {\n      rgb = m.slice(1, 4);\n      for (i = o = 0; o <= 2; i = ++o) {\n        rgb[i] = +rgb[i];\n      }\n      rgb[3] = 1;\n    } else if (m = css.match(/rgba\\(\\s*(\\-?\\d+),\\s*(\\-?\\d+)\\s*,\\s*(\\-?\\d+)\\s*,\\s*([01]|[01]?\\.\\d+)\\)/)) {\n      rgb = m.slice(1, 5);\n      for (i = w = 0; w <= 3; i = ++w) {\n        rgb[i] = +rgb[i];\n      }\n    } else if (m = css.match(/rgb\\(\\s*(\\-?\\d+(?:\\.\\d+)?)%,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*\\)/)) {\n      rgb = m.slice(1, 4);\n      for (i = aa = 0; aa <= 2; i = ++aa) {\n        rgb[i] = round(rgb[i] * 2.55);\n      }\n      rgb[3] = 1;\n    } else if (m = css.match(/rgba\\(\\s*(\\-?\\d+(?:\\.\\d+)?)%,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)/)) {\n      rgb = m.slice(1, 5);\n      for (i = ab = 0; ab <= 2; i = ++ab) {\n        rgb[i] = round(rgb[i] * 2.55);\n      }\n      rgb[3] = +rgb[3];\n    } else if (m = css.match(/hsl\\(\\s*(\\-?\\d+(?:\\.\\d+)?),\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*\\)/)) {\n      hsl = m.slice(1, 4);\n      hsl[1] *= 0.01;\n      hsl[2] *= 0.01;\n      rgb = hsl2rgb(hsl);\n      rgb[3] = 1;\n    } else if (m = css.match(/hsla\\(\\s*(\\-?\\d+(?:\\.\\d+)?),\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)/)) {\n      hsl = m.slice(1, 4);\n      hsl[1] *= 0.01;\n      hsl[2] *= 0.01;\n      rgb = hsl2rgb(hsl);\n      rgb[3] = +m[4];\n    }\n    return rgb;\n  };\n\n  rgb2css = function(rgba) {\n    var mode;\n    mode = rgba[3] < 1 ? 'rgba' : 'rgb';\n    if (mode === 'rgb') {\n      return mode + '(' + rgba.slice(0, 3).map(round).join(',') + ')';\n    } else if (mode === 'rgba') {\n      return mode + '(' + rgba.slice(0, 3).map(round).join(',') + ',' + rgba[3] + ')';\n    } else {\n\n    }\n  };\n\n  rnd = function(a) {\n    return round(a * 100) / 100;\n  };\n\n  hsl2css = function(hsl, alpha) {\n    var mode;\n    mode = alpha < 1 ? 'hsla' : 'hsl';\n    hsl[0] = rnd(hsl[0] || 0);\n    hsl[1] = rnd(hsl[1] * 100) + '%';\n    hsl[2] = rnd(hsl[2] * 100) + '%';\n    if (mode === 'hsla') {\n      hsl[3] = alpha;\n    }\n    return mode + '(' + hsl.join(',') + ')';\n  };\n\n  _input.css = function(h) {\n    return css2rgb(h);\n  };\n\n  chroma.css = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['css']), function(){});\n  };\n\n  Color.prototype.css = function(mode) {\n    if (mode == null) {\n      mode = 'rgb';\n    }\n    if (mode.slice(0, 3) === 'rgb') {\n      return rgb2css(this._rgb);\n    } else if (mode.slice(0, 3) === 'hsl') {\n      return hsl2css(this.hsl(), this.alpha());\n    }\n  };\n\n  _input.named = function(name) {\n    return hex2rgb(w3cx11[name]);\n  };\n\n  _guess_formats.push({\n    p: 5,\n    test: function(n) {\n      if (arguments.length === 1 && (w3cx11[n] != null)) {\n        return 'named';\n      }\n    }\n  });\n\n  Color.prototype.name = function(n) {\n    var h, k;\n    if (arguments.length) {\n      if (w3cx11[n]) {\n        this._rgb = hex2rgb(w3cx11[n]);\n      }\n      this._rgb[3] = 1;\n      this;\n    }\n    h = this.hex();\n    for (k in w3cx11) {\n      if (h === w3cx11[k]) {\n        return k;\n      }\n    }\n    return h;\n  };\n\n  lch2lab = function() {\n\n    /*\n    Convert from a qualitative parameter h and a quantitative parameter l to a 24-bit pixel.\n    These formulas were invented by David Dalrymple to obtain maximum contrast without going\n    out of gamut if the parameters are in the range 0-1.\n    \n    A saturation multiplier was added by Gregor Aisch\n     */\n    var c, h, l, ref;\n    ref = unpack(arguments), l = ref[0], c = ref[1], h = ref[2];\n    h = h * DEG2RAD;\n    return [l, cos(h) * c, sin(h) * c];\n  };\n\n  lch2rgb = function() {\n    var L, a, args, b, c, g, h, l, r, ref, ref1;\n    args = unpack(arguments);\n    l = args[0], c = args[1], h = args[2];\n    ref = lch2lab(l, c, h), L = ref[0], a = ref[1], b = ref[2];\n    ref1 = lab2rgb(L, a, b), r = ref1[0], g = ref1[1], b = ref1[2];\n    return [r, g, b, args.length > 3 ? args[3] : 1];\n  };\n\n  lab2lch = function() {\n    var a, b, c, h, l, ref;\n    ref = unpack(arguments), l = ref[0], a = ref[1], b = ref[2];\n    c = sqrt(a * a + b * b);\n    h = (atan2(b, a) * RAD2DEG + 360) % 360;\n    if (round(c * 10000) === 0) {\n      h = Number.NaN;\n    }\n    return [l, c, h];\n  };\n\n  rgb2lch = function() {\n    var a, b, g, l, r, ref, ref1;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    ref1 = rgb2lab(r, g, b), l = ref1[0], a = ref1[1], b = ref1[2];\n    return lab2lch(l, a, b);\n  };\n\n  chroma.lch = function() {\n    var args;\n    args = unpack(arguments);\n    return new Color(args, 'lch');\n  };\n\n  chroma.hcl = function() {\n    var args;\n    args = unpack(arguments);\n    return new Color(args, 'hcl');\n  };\n\n  _input.lch = lch2rgb;\n\n  _input.hcl = function() {\n    var c, h, l, ref;\n    ref = unpack(arguments), h = ref[0], c = ref[1], l = ref[2];\n    return lch2rgb([l, c, h]);\n  };\n\n  Color.prototype.lch = function() {\n    return rgb2lch(this._rgb);\n  };\n\n  Color.prototype.hcl = function() {\n    return rgb2lch(this._rgb).reverse();\n  };\n\n  rgb2cmyk = function(mode) {\n    var b, c, f, g, k, m, r, ref, y;\n    if (mode == null) {\n      mode = 'rgb';\n    }\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    r = r / 255;\n    g = g / 255;\n    b = b / 255;\n    k = 1 - Math.max(r, Math.max(g, b));\n    f = k < 1 ? 1 / (1 - k) : 0;\n    c = (1 - r - k) * f;\n    m = (1 - g - k) * f;\n    y = (1 - b - k) * f;\n    return [c, m, y, k];\n  };\n\n  cmyk2rgb = function() {\n    var alpha, args, b, c, g, k, m, r, y;\n    args = unpack(arguments);\n    c = args[0], m = args[1], y = args[2], k = args[3];\n    alpha = args.length > 4 ? args[4] : 1;\n    if (k === 1) {\n      return [0, 0, 0, alpha];\n    }\n    r = c >= 1 ? 0 : 255 * (1 - c) * (1 - k);\n    g = m >= 1 ? 0 : 255 * (1 - m) * (1 - k);\n    b = y >= 1 ? 0 : 255 * (1 - y) * (1 - k);\n    return [r, g, b, alpha];\n  };\n\n  _input.cmyk = function() {\n    return cmyk2rgb(unpack(arguments));\n  };\n\n  chroma.cmyk = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['cmyk']), function(){});\n  };\n\n  Color.prototype.cmyk = function() {\n    return rgb2cmyk(this._rgb);\n  };\n\n  _input.gl = function() {\n    var i, k, o, rgb, v;\n    rgb = (function() {\n      var ref, results;\n      ref = unpack(arguments);\n      results = [];\n      for (k in ref) {\n        v = ref[k];\n        results.push(v);\n      }\n      return results;\n    }).apply(this, arguments);\n    for (i = o = 0; o <= 2; i = ++o) {\n      rgb[i] *= 255;\n    }\n    return rgb;\n  };\n\n  chroma.gl = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['gl']), function(){});\n  };\n\n  Color.prototype.gl = function() {\n    var rgb;\n    rgb = this._rgb;\n    return [rgb[0] / 255, rgb[1] / 255, rgb[2] / 255, rgb[3]];\n  };\n\n  rgb2luminance = function(r, g, b) {\n    var ref;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    r = luminance_x(r);\n    g = luminance_x(g);\n    b = luminance_x(b);\n    return 0.2126 * r + 0.7152 * g + 0.0722 * b;\n  };\n\n  luminance_x = function(x) {\n    x /= 255;\n    if (x <= 0.03928) {\n      return x / 12.92;\n    } else {\n      return pow((x + 0.055) / 1.055, 2.4);\n    }\n  };\n\n  interpolate_rgb = function(col1, col2, f, m) {\n    var xyz0, xyz1;\n    xyz0 = col1._rgb;\n    xyz1 = col2._rgb;\n    return new Color(xyz0[0] + f * (xyz1[0] - xyz0[0]), xyz0[1] + f * (xyz1[1] - xyz0[1]), xyz0[2] + f * (xyz1[2] - xyz0[2]), m);\n  };\n\n  _interpolators.push(['rgb', interpolate_rgb]);\n\n  Color.prototype.luminance = function(lum, mode) {\n    var cur_lum, eps, max_iter, rgba, test;\n    if (mode == null) {\n      mode = 'rgb';\n    }\n    if (!arguments.length) {\n      return rgb2luminance(this._rgb);\n    }\n    rgba = this._rgb;\n    if (lum === 0) {\n      rgba = [0, 0, 0, this._rgb[3]];\n    } else if (lum === 1) {\n      rgba = [255, 255, 255, this[3]];\n    } else {\n      cur_lum = rgb2luminance(this._rgb);\n      eps = 1e-7;\n      max_iter = 20;\n      test = function(l, h) {\n        var lm, m;\n        m = l.interpolate(h, 0.5, mode);\n        lm = m.luminance();\n        if (Math.abs(lum - lm) < eps || !max_iter--) {\n          return m;\n        }\n        if (lm > lum) {\n          return test(l, m);\n        }\n        return test(m, h);\n      };\n      if (cur_lum > lum) {\n        rgba = test(chroma('black'), this).rgba();\n      } else {\n        rgba = test(this, chroma('white')).rgba();\n      }\n    }\n    return chroma(rgba).alpha(this.alpha());\n  };\n\n  temperature2rgb = function(kelvin) {\n    var b, g, r, temp;\n    temp = kelvin / 100;\n    if (temp < 66) {\n      r = 255;\n      g = -155.25485562709179 - 0.44596950469579133 * (g = temp - 2) + 104.49216199393888 * log(g);\n      b = temp < 20 ? 0 : -254.76935184120902 + 0.8274096064007395 * (b = temp - 10) + 115.67994401066147 * log(b);\n    } else {\n      r = 351.97690566805693 + 0.114206453784165 * (r = temp - 55) - 40.25366309332127 * log(r);\n      g = 325.4494125711974 + 0.07943456536662342 * (g = temp - 50) - 28.0852963507957 * log(g);\n      b = 255;\n    }\n    return [r, g, b];\n  };\n\n  rgb2temperature = function() {\n    var b, eps, g, maxTemp, minTemp, r, ref, rgb, temp;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    minTemp = 1000;\n    maxTemp = 40000;\n    eps = 0.4;\n    while (maxTemp - minTemp > eps) {\n      temp = (maxTemp + minTemp) * 0.5;\n      rgb = temperature2rgb(temp);\n      if ((rgb[2] / rgb[0]) >= (b / r)) {\n        maxTemp = temp;\n      } else {\n        minTemp = temp;\n      }\n    }\n    return round(temp);\n  };\n\n  chroma.temperature = chroma.kelvin = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['temperature']), function(){});\n  };\n\n  _input.temperature = _input.kelvin = _input.K = temperature2rgb;\n\n  Color.prototype.temperature = function() {\n    return rgb2temperature(this._rgb);\n  };\n\n  Color.prototype.kelvin = Color.prototype.temperature;\n\n  chroma.contrast = function(a, b) {\n    var l1, l2, ref, ref1;\n    if ((ref = type(a)) === 'string' || ref === 'number') {\n      a = new Color(a);\n    }\n    if ((ref1 = type(b)) === 'string' || ref1 === 'number') {\n      b = new Color(b);\n    }\n    l1 = a.luminance();\n    l2 = b.luminance();\n    if (l1 > l2) {\n      return (l1 + 0.05) / (l2 + 0.05);\n    } else {\n      return (l2 + 0.05) / (l1 + 0.05);\n    }\n  };\n\n  chroma.distance = function(a, b, mode) {\n    var d, i, l1, l2, ref, ref1, sum_sq;\n    if (mode == null) {\n      mode = 'lab';\n    }\n    if ((ref = type(a)) === 'string' || ref === 'number') {\n      a = new Color(a);\n    }\n    if ((ref1 = type(b)) === 'string' || ref1 === 'number') {\n      b = new Color(b);\n    }\n    l1 = a.get(mode);\n    l2 = b.get(mode);\n    sum_sq = 0;\n    for (i in l1) {\n      d = (l1[i] || 0) - (l2[i] || 0);\n      sum_sq += d * d;\n    }\n    return Math.sqrt(sum_sq);\n  };\n\n  chroma.deltaE = function(a, b, L, C) {\n    var L1, L2, a1, a2, b1, b2, c1, c2, c4, dH2, delA, delB, delC, delL, f, h1, ref, ref1, ref2, ref3, sc, sh, sl, t, v1, v2, v3;\n    if (L == null) {\n      L = 1;\n    }\n    if (C == null) {\n      C = 1;\n    }\n    if ((ref = type(a)) === 'string' || ref === 'number') {\n      a = new Color(a);\n    }\n    if ((ref1 = type(b)) === 'string' || ref1 === 'number') {\n      b = new Color(b);\n    }\n    ref2 = a.lab(), L1 = ref2[0], a1 = ref2[1], b1 = ref2[2];\n    ref3 = b.lab(), L2 = ref3[0], a2 = ref3[1], b2 = ref3[2];\n    c1 = sqrt(a1 * a1 + b1 * b1);\n    c2 = sqrt(a2 * a2 + b2 * b2);\n    sl = L1 < 16.0 ? 0.511 : (0.040975 * L1) / (1.0 + 0.01765 * L1);\n    sc = (0.0638 * c1) / (1.0 + 0.0131 * c1) + 0.638;\n    h1 = c1 < 0.000001 ? 0.0 : (atan2(b1, a1) * 180.0) / PI;\n    while (h1 < 0) {\n      h1 += 360;\n    }\n    while (h1 >= 360) {\n      h1 -= 360;\n    }\n    t = (h1 >= 164.0) && (h1 <= 345.0) ? 0.56 + abs(0.2 * cos((PI * (h1 + 168.0)) / 180.0)) : 0.36 + abs(0.4 * cos((PI * (h1 + 35.0)) / 180.0));\n    c4 = c1 * c1 * c1 * c1;\n    f = sqrt(c4 / (c4 + 1900.0));\n    sh = sc * (f * t + 1.0 - f);\n    delL = L1 - L2;\n    delC = c1 - c2;\n    delA = a1 - a2;\n    delB = b1 - b2;\n    dH2 = delA * delA + delB * delB - delC * delC;\n    v1 = delL / (L * sl);\n    v2 = delC / (C * sc);\n    v3 = sh;\n    return sqrt(v1 * v1 + v2 * v2 + (dH2 / (v3 * v3)));\n  };\n\n  Color.prototype.get = function(modechan) {\n    var channel, i, me, mode, ref, src;\n    me = this;\n    ref = modechan.split('.'), mode = ref[0], channel = ref[1];\n    src = me[mode]();\n    if (channel) {\n      i = mode.indexOf(channel);\n      if (i > -1) {\n        return src[i];\n      } else {\n        return console.warn('unknown channel ' + channel + ' in mode ' + mode);\n      }\n    } else {\n      return src;\n    }\n  };\n\n  Color.prototype.set = function(modechan, value) {\n    var channel, i, me, mode, ref, src;\n    me = this;\n    ref = modechan.split('.'), mode = ref[0], channel = ref[1];\n    if (channel) {\n      src = me[mode]();\n      i = mode.indexOf(channel);\n      if (i > -1) {\n        if (type(value) === 'string') {\n          switch (value.charAt(0)) {\n            case '+':\n              src[i] += +value;\n              break;\n            case '-':\n              src[i] += +value;\n              break;\n            case '*':\n              src[i] *= +(value.substr(1));\n              break;\n            case '/':\n              src[i] /= +(value.substr(1));\n              break;\n            default:\n              src[i] = +value;\n          }\n        } else {\n          src[i] = value;\n        }\n      } else {\n        console.warn('unknown channel ' + channel + ' in mode ' + mode);\n      }\n    } else {\n      src = value;\n    }\n    return chroma(src, mode).alpha(me.alpha());\n  };\n\n  Color.prototype.clipped = function() {\n    return this._rgb._clipped || false;\n  };\n\n  Color.prototype.alpha = function(a) {\n    if (arguments.length) {\n      return chroma.rgb([this._rgb[0], this._rgb[1], this._rgb[2], a]);\n    }\n    return this._rgb[3];\n  };\n\n  Color.prototype.darken = function(amount) {\n    var lab, me;\n    if (amount == null) {\n      amount = 1;\n    }\n    me = this;\n    lab = me.lab();\n    lab[0] -= LAB_CONSTANTS.Kn * amount;\n    return chroma.lab(lab).alpha(me.alpha());\n  };\n\n  Color.prototype.brighten = function(amount) {\n    if (amount == null) {\n      amount = 1;\n    }\n    return this.darken(-amount);\n  };\n\n  Color.prototype.darker = Color.prototype.darken;\n\n  Color.prototype.brighter = Color.prototype.brighten;\n\n  Color.prototype.saturate = function(amount) {\n    var lch, me;\n    if (amount == null) {\n      amount = 1;\n    }\n    me = this;\n    lch = me.lch();\n    lch[1] += amount * LAB_CONSTANTS.Kn;\n    if (lch[1] < 0) {\n      lch[1] = 0;\n    }\n    return chroma.lch(lch).alpha(me.alpha());\n  };\n\n  Color.prototype.desaturate = function(amount) {\n    if (amount == null) {\n      amount = 1;\n    }\n    return this.saturate(-amount);\n  };\n\n  Color.prototype.premultiply = function() {\n    var a, rgb;\n    rgb = this.rgb();\n    a = this.alpha();\n    return chroma(rgb[0] * a, rgb[1] * a, rgb[2] * a, a);\n  };\n\n  blend = function(bottom, top, mode) {\n    if (!blend[mode]) {\n      throw 'unknown blend mode ' + mode;\n    }\n    return blend[mode](bottom, top);\n  };\n\n  blend_f = function(f) {\n    return function(bottom, top) {\n      var c0, c1;\n      c0 = chroma(top).rgb();\n      c1 = chroma(bottom).rgb();\n      return chroma(f(c0, c1), 'rgb');\n    };\n  };\n\n  each = function(f) {\n    return function(c0, c1) {\n      var i, o, out;\n      out = [];\n      for (i = o = 0; o <= 3; i = ++o) {\n        out[i] = f(c0[i], c1[i]);\n      }\n      return out;\n    };\n  };\n\n  normal = function(a, b) {\n    return a;\n  };\n\n  multiply = function(a, b) {\n    return a * b / 255;\n  };\n\n  darken = function(a, b) {\n    if (a > b) {\n      return b;\n    } else {\n      return a;\n    }\n  };\n\n  lighten = function(a, b) {\n    if (a > b) {\n      return a;\n    } else {\n      return b;\n    }\n  };\n\n  screen = function(a, b) {\n    return 255 * (1 - (1 - a / 255) * (1 - b / 255));\n  };\n\n  overlay = function(a, b) {\n    if (b < 128) {\n      return 2 * a * b / 255;\n    } else {\n      return 255 * (1 - 2 * (1 - a / 255) * (1 - b / 255));\n    }\n  };\n\n  burn = function(a, b) {\n    return 255 * (1 - (1 - b / 255) / (a / 255));\n  };\n\n  dodge = function(a, b) {\n    if (a === 255) {\n      return 255;\n    }\n    a = 255 * (b / 255) / (1 - a / 255);\n    if (a > 255) {\n      return 255;\n    } else {\n      return a;\n    }\n  };\n\n  blend.normal = blend_f(each(normal));\n\n  blend.multiply = blend_f(each(multiply));\n\n  blend.screen = blend_f(each(screen));\n\n  blend.overlay = blend_f(each(overlay));\n\n  blend.darken = blend_f(each(darken));\n\n  blend.lighten = blend_f(each(lighten));\n\n  blend.dodge = blend_f(each(dodge));\n\n  blend.burn = blend_f(each(burn));\n\n  chroma.blend = blend;\n\n  chroma.analyze = function(data) {\n    var len, o, r, val;\n    r = {\n      min: Number.MAX_VALUE,\n      max: Number.MAX_VALUE * -1,\n      sum: 0,\n      values: [],\n      count: 0\n    };\n    for (o = 0, len = data.length; o < len; o++) {\n      val = data[o];\n      if ((val != null) && !isNaN(val)) {\n        r.values.push(val);\n        r.sum += val;\n        if (val < r.min) {\n          r.min = val;\n        }\n        if (val > r.max) {\n          r.max = val;\n        }\n        r.count += 1;\n      }\n    }\n    r.domain = [r.min, r.max];\n    r.limits = function(mode, num) {\n      return chroma.limits(r, mode, num);\n    };\n    return r;\n  };\n\n  chroma.scale = function(colors, positions) {\n    var _classes, _colorCache, _colors, _correctLightness, _domain, _fixed, _gamma, _max, _min, _mode, _nacol, _out, _padding, _pos, _spread, _useCache, classifyValue, f, getClass, getColor, resetCache, setColors, tmap;\n    _mode = 'rgb';\n    _nacol = chroma('#ccc');\n    _spread = 0;\n    _fixed = false;\n    _domain = [0, 1];\n    _pos = [];\n    _padding = [0, 0];\n    _classes = false;\n    _colors = [];\n    _out = false;\n    _min = 0;\n    _max = 1;\n    _correctLightness = false;\n    _colorCache = {};\n    _useCache = true;\n    _gamma = 1;\n    setColors = function(colors) {\n      var c, col, o, ref, ref1, w;\n      if (colors == null) {\n        colors = ['#fff', '#000'];\n      }\n      if ((colors != null) && type(colors) === 'string' && (chroma.brewer != null)) {\n        colors = chroma.brewer[colors] || chroma.brewer[colors.toLowerCase()] || colors;\n      }\n      if (type(colors) === 'array') {\n        colors = colors.slice(0);\n        for (c = o = 0, ref = colors.length - 1; 0 <= ref ? o <= ref : o >= ref; c = 0 <= ref ? ++o : --o) {\n          col = colors[c];\n          if (type(col) === \"string\") {\n            colors[c] = chroma(col);\n          }\n        }\n        _pos.length = 0;\n        for (c = w = 0, ref1 = colors.length - 1; 0 <= ref1 ? w <= ref1 : w >= ref1; c = 0 <= ref1 ? ++w : --w) {\n          _pos.push(c / (colors.length - 1));\n        }\n      }\n      resetCache();\n      return _colors = colors;\n    };\n    getClass = function(value) {\n      var i, n;\n      if (_classes != null) {\n        n = _classes.length - 1;\n        i = 0;\n        while (i < n && value >= _classes[i]) {\n          i++;\n        }\n        return i - 1;\n      }\n      return 0;\n    };\n    tmap = function(t) {\n      return t;\n    };\n    classifyValue = function(value) {\n      var i, maxc, minc, n, val;\n      val = value;\n      if (_classes.length > 2) {\n        n = _classes.length - 1;\n        i = getClass(value);\n        minc = _classes[0] + (_classes[1] - _classes[0]) * (0 + _spread * 0.5);\n        maxc = _classes[n - 1] + (_classes[n] - _classes[n - 1]) * (1 - _spread * 0.5);\n        val = _min + ((_classes[i] + (_classes[i + 1] - _classes[i]) * 0.5 - minc) / (maxc - minc)) * (_max - _min);\n      }\n      return val;\n    };\n    getColor = function(val, bypassMap) {\n      var c, col, i, k, o, p, ref, t;\n      if (bypassMap == null) {\n        bypassMap = false;\n      }\n      if (isNaN(val)) {\n        return _nacol;\n      }\n      if (!bypassMap) {\n        if (_classes && _classes.length > 2) {\n          c = getClass(val);\n          t = c / (_classes.length - 2);\n        } else if (_max !== _min) {\n          t = (val - _min) / (_max - _min);\n        } else {\n          t = 1;\n        }\n      } else {\n        t = val;\n      }\n      if (!bypassMap) {\n        t = tmap(t);\n      }\n      if (_gamma !== 1) {\n        t = pow(t, _gamma);\n      }\n      t = _padding[0] + (t * (1 - _padding[0] - _padding[1]));\n      t = Math.min(1, Math.max(0, t));\n      k = Math.floor(t * 10000);\n      if (_useCache && _colorCache[k]) {\n        col = _colorCache[k];\n      } else {\n        if (type(_colors) === 'array') {\n          for (i = o = 0, ref = _pos.length - 1; 0 <= ref ? o <= ref : o >= ref; i = 0 <= ref ? ++o : --o) {\n            p = _pos[i];\n            if (t <= p) {\n              col = _colors[i];\n              break;\n            }\n            if (t >= p && i === _pos.length - 1) {\n              col = _colors[i];\n              break;\n            }\n            if (t > p && t < _pos[i + 1]) {\n              t = (t - p) / (_pos[i + 1] - p);\n              col = chroma.interpolate(_colors[i], _colors[i + 1], t, _mode);\n              break;\n            }\n          }\n        } else if (type(_colors) === 'function') {\n          col = _colors(t);\n        }\n        if (_useCache) {\n          _colorCache[k] = col;\n        }\n      }\n      return col;\n    };\n    resetCache = function() {\n      return _colorCache = {};\n    };\n    setColors(colors);\n    f = function(v) {\n      var c;\n      c = chroma(getColor(v));\n      if (_out && c[_out]) {\n        return c[_out]();\n      } else {\n        return c;\n      }\n    };\n    f.classes = function(classes) {\n      var d;\n      if (classes != null) {\n        if (type(classes) === 'array') {\n          _classes = classes;\n          _domain = [classes[0], classes[classes.length - 1]];\n        } else {\n          d = chroma.analyze(_domain);\n          if (classes === 0) {\n            _classes = [d.min, d.max];\n          } else {\n            _classes = chroma.limits(d, 'e', classes);\n          }\n        }\n        return f;\n      }\n      return _classes;\n    };\n    f.domain = function(domain) {\n      var c, d, k, len, o, ref, w;\n      if (!arguments.length) {\n        return _domain;\n      }\n      _min = domain[0];\n      _max = domain[domain.length - 1];\n      _pos = [];\n      k = _colors.length;\n      if (domain.length === k && _min !== _max) {\n        for (o = 0, len = domain.length; o < len; o++) {\n          d = domain[o];\n          _pos.push((d - _min) / (_max - _min));\n        }\n      } else {\n        for (c = w = 0, ref = k - 1; 0 <= ref ? w <= ref : w >= ref; c = 0 <= ref ? ++w : --w) {\n          _pos.push(c / (k - 1));\n        }\n      }\n      _domain = [_min, _max];\n      return f;\n    };\n    f.mode = function(_m) {\n      if (!arguments.length) {\n        return _mode;\n      }\n      _mode = _m;\n      resetCache();\n      return f;\n    };\n    f.range = function(colors, _pos) {\n      setColors(colors, _pos);\n      return f;\n    };\n    f.out = function(_o) {\n      _out = _o;\n      return f;\n    };\n    f.spread = function(val) {\n      if (!arguments.length) {\n        return _spread;\n      }\n      _spread = val;\n      return f;\n    };\n    f.correctLightness = function(v) {\n      if (v == null) {\n        v = true;\n      }\n      _correctLightness = v;\n      resetCache();\n      if (_correctLightness) {\n        tmap = function(t) {\n          var L0, L1, L_actual, L_diff, L_ideal, max_iter, pol, t0, t1;\n          L0 = getColor(0, true).lab()[0];\n          L1 = getColor(1, true).lab()[0];\n          pol = L0 > L1;\n          L_actual = getColor(t, true).lab()[0];\n          L_ideal = L0 + (L1 - L0) * t;\n          L_diff = L_actual - L_ideal;\n          t0 = 0;\n          t1 = 1;\n          max_iter = 20;\n          while (Math.abs(L_diff) > 1e-2 && max_iter-- > 0) {\n            (function() {\n              if (pol) {\n                L_diff *= -1;\n              }\n              if (L_diff < 0) {\n                t0 = t;\n                t += (t1 - t) * 0.5;\n              } else {\n                t1 = t;\n                t += (t0 - t) * 0.5;\n              }\n              L_actual = getColor(t, true).lab()[0];\n              return L_diff = L_actual - L_ideal;\n            })();\n          }\n          return t;\n        };\n      } else {\n        tmap = function(t) {\n          return t;\n        };\n      }\n      return f;\n    };\n    f.padding = function(p) {\n      if (p != null) {\n        if (type(p) === 'number') {\n          p = [p, p];\n        }\n        _padding = p;\n        return f;\n      } else {\n        return _padding;\n      }\n    };\n    f.colors = function(numColors, out) {\n      var dd, dm, i, o, ref, result, results, samples, w;\n      if (arguments.length < 2) {\n        out = 'hex';\n      }\n      result = [];\n      if (arguments.length === 0) {\n        result = _colors.slice(0);\n      } else if (numColors === 1) {\n        result = [f(0.5)];\n      } else if (numColors > 1) {\n        dm = _domain[0];\n        dd = _domain[1] - dm;\n        result = (function() {\n          results = [];\n          for (var o = 0; 0 <= numColors ? o < numColors : o > numColors; 0 <= numColors ? o++ : o--){ results.push(o); }\n          return results;\n        }).apply(this).map(function(i) {\n          return f(dm + i / (numColors - 1) * dd);\n        });\n      } else {\n        colors = [];\n        samples = [];\n        if (_classes && _classes.length > 2) {\n          for (i = w = 1, ref = _classes.length; 1 <= ref ? w < ref : w > ref; i = 1 <= ref ? ++w : --w) {\n            samples.push((_classes[i - 1] + _classes[i]) * 0.5);\n          }\n        } else {\n          samples = _domain;\n        }\n        result = samples.map(function(v) {\n          return f(v);\n        });\n      }\n      if (chroma[out]) {\n        result = result.map(function(c) {\n          return c[out]();\n        });\n      }\n      return result;\n    };\n    f.cache = function(c) {\n      if (c != null) {\n        _useCache = c;\n        return f;\n      } else {\n        return _useCache;\n      }\n    };\n    f.gamma = function(g) {\n      if (g != null) {\n        _gamma = g;\n        return f;\n      } else {\n        return _gamma;\n      }\n    };\n    return f;\n  };\n\n  if (chroma.scales == null) {\n    chroma.scales = {};\n  }\n\n  chroma.scales.cool = function() {\n    return chroma.scale([chroma.hsl(180, 1, .9), chroma.hsl(250, .7, .4)]);\n  };\n\n  chroma.scales.hot = function() {\n    return chroma.scale(['#000', '#f00', '#ff0', '#fff'], [0, .25, .75, 1]).mode('rgb');\n  };\n\n  chroma.analyze = function(data, key, filter) {\n    var add, k, len, o, r, val, visit;\n    r = {\n      min: Number.MAX_VALUE,\n      max: Number.MAX_VALUE * -1,\n      sum: 0,\n      values: [],\n      count: 0\n    };\n    if (filter == null) {\n      filter = function() {\n        return true;\n      };\n    }\n    add = function(val) {\n      if ((val != null) && !isNaN(val)) {\n        r.values.push(val);\n        r.sum += val;\n        if (val < r.min) {\n          r.min = val;\n        }\n        if (val > r.max) {\n          r.max = val;\n        }\n        r.count += 1;\n      }\n    };\n    visit = function(val, k) {\n      if (filter(val, k)) {\n        if ((key != null) && type(key) === 'function') {\n          return add(key(val));\n        } else if ((key != null) && type(key) === 'string' || type(key) === 'number') {\n          return add(val[key]);\n        } else {\n          return add(val);\n        }\n      }\n    };\n    if (type(data) === 'array') {\n      for (o = 0, len = data.length; o < len; o++) {\n        val = data[o];\n        visit(val);\n      }\n    } else {\n      for (k in data) {\n        val = data[k];\n        visit(val, k);\n      }\n    }\n    r.domain = [r.min, r.max];\n    r.limits = function(mode, num) {\n      return chroma.limits(r, mode, num);\n    };\n    return r;\n  };\n\n  chroma.limits = function(data, mode, num) {\n    var aa, ab, ac, ad, ae, af, ag, ah, ai, aj, ak, al, am, assignments, best, centroids, cluster, clusterSizes, dist, i, j, kClusters, limits, max_log, min, min_log, mindist, n, nb_iters, newCentroids, o, p, pb, pr, ref, ref1, ref10, ref11, ref12, ref13, ref14, ref2, ref3, ref4, ref5, ref6, ref7, ref8, ref9, repeat, sum, tmpKMeansBreaks, v, value, values, w;\n    if (mode == null) {\n      mode = 'equal';\n    }\n    if (num == null) {\n      num = 7;\n    }\n    if (type(data) === 'array') {\n      data = chroma.analyze(data);\n    }\n    min = data.min;\n    max = data.max;\n    sum = data.sum;\n    values = data.values.sort(function(a, b) {\n      return a - b;\n    });\n    if (num === 1) {\n      return [min, max];\n    }\n    limits = [];\n    if (mode.substr(0, 1) === 'c') {\n      limits.push(min);\n      limits.push(max);\n    }\n    if (mode.substr(0, 1) === 'e') {\n      limits.push(min);\n      for (i = o = 1, ref = num - 1; 1 <= ref ? o <= ref : o >= ref; i = 1 <= ref ? ++o : --o) {\n        limits.push(min + (i / num) * (max - min));\n      }\n      limits.push(max);\n    } else if (mode.substr(0, 1) === 'l') {\n      if (min <= 0) {\n        throw 'Logarithmic scales are only possible for values > 0';\n      }\n      min_log = Math.LOG10E * log(min);\n      max_log = Math.LOG10E * log(max);\n      limits.push(min);\n      for (i = w = 1, ref1 = num - 1; 1 <= ref1 ? w <= ref1 : w >= ref1; i = 1 <= ref1 ? ++w : --w) {\n        limits.push(pow(10, min_log + (i / num) * (max_log - min_log)));\n      }\n      limits.push(max);\n    } else if (mode.substr(0, 1) === 'q') {\n      limits.push(min);\n      for (i = aa = 1, ref2 = num - 1; 1 <= ref2 ? aa <= ref2 : aa >= ref2; i = 1 <= ref2 ? ++aa : --aa) {\n        p = (values.length - 1) * i / num;\n        pb = floor(p);\n        if (pb === p) {\n          limits.push(values[pb]);\n        } else {\n          pr = p - pb;\n          limits.push(values[pb] * (1 - pr) + values[pb + 1] * pr);\n        }\n      }\n      limits.push(max);\n    } else if (mode.substr(0, 1) === 'k') {\n\n      /*\n      implementation based on\n      http://code.google.com/p/figue/source/browse/trunk/figue.js#336\n      simplified for 1-d input values\n       */\n      n = values.length;\n      assignments = new Array(n);\n      clusterSizes = new Array(num);\n      repeat = true;\n      nb_iters = 0;\n      centroids = null;\n      centroids = [];\n      centroids.push(min);\n      for (i = ab = 1, ref3 = num - 1; 1 <= ref3 ? ab <= ref3 : ab >= ref3; i = 1 <= ref3 ? ++ab : --ab) {\n        centroids.push(min + (i / num) * (max - min));\n      }\n      centroids.push(max);\n      while (repeat) {\n        for (j = ac = 0, ref4 = num - 1; 0 <= ref4 ? ac <= ref4 : ac >= ref4; j = 0 <= ref4 ? ++ac : --ac) {\n          clusterSizes[j] = 0;\n        }\n        for (i = ad = 0, ref5 = n - 1; 0 <= ref5 ? ad <= ref5 : ad >= ref5; i = 0 <= ref5 ? ++ad : --ad) {\n          value = values[i];\n          mindist = Number.MAX_VALUE;\n          for (j = ae = 0, ref6 = num - 1; 0 <= ref6 ? ae <= ref6 : ae >= ref6; j = 0 <= ref6 ? ++ae : --ae) {\n            dist = abs(centroids[j] - value);\n            if (dist < mindist) {\n              mindist = dist;\n              best = j;\n            }\n          }\n          clusterSizes[best]++;\n          assignments[i] = best;\n        }\n        newCentroids = new Array(num);\n        for (j = af = 0, ref7 = num - 1; 0 <= ref7 ? af <= ref7 : af >= ref7; j = 0 <= ref7 ? ++af : --af) {\n          newCentroids[j] = null;\n        }\n        for (i = ag = 0, ref8 = n - 1; 0 <= ref8 ? ag <= ref8 : ag >= ref8; i = 0 <= ref8 ? ++ag : --ag) {\n          cluster = assignments[i];\n          if (newCentroids[cluster] === null) {\n            newCentroids[cluster] = values[i];\n          } else {\n            newCentroids[cluster] += values[i];\n          }\n        }\n        for (j = ah = 0, ref9 = num - 1; 0 <= ref9 ? ah <= ref9 : ah >= ref9; j = 0 <= ref9 ? ++ah : --ah) {\n          newCentroids[j] *= 1 / clusterSizes[j];\n        }\n        repeat = false;\n        for (j = ai = 0, ref10 = num - 1; 0 <= ref10 ? ai <= ref10 : ai >= ref10; j = 0 <= ref10 ? ++ai : --ai) {\n          if (newCentroids[j] !== centroids[i]) {\n            repeat = true;\n            break;\n          }\n        }\n        centroids = newCentroids;\n        nb_iters++;\n        if (nb_iters > 200) {\n          repeat = false;\n        }\n      }\n      kClusters = {};\n      for (j = aj = 0, ref11 = num - 1; 0 <= ref11 ? aj <= ref11 : aj >= ref11; j = 0 <= ref11 ? ++aj : --aj) {\n        kClusters[j] = [];\n      }\n      for (i = ak = 0, ref12 = n - 1; 0 <= ref12 ? ak <= ref12 : ak >= ref12; i = 0 <= ref12 ? ++ak : --ak) {\n        cluster = assignments[i];\n        kClusters[cluster].push(values[i]);\n      }\n      tmpKMeansBreaks = [];\n      for (j = al = 0, ref13 = num - 1; 0 <= ref13 ? al <= ref13 : al >= ref13; j = 0 <= ref13 ? ++al : --al) {\n        tmpKMeansBreaks.push(kClusters[j][0]);\n        tmpKMeansBreaks.push(kClusters[j][kClusters[j].length - 1]);\n      }\n      tmpKMeansBreaks = tmpKMeansBreaks.sort(function(a, b) {\n        return a - b;\n      });\n      limits.push(tmpKMeansBreaks[0]);\n      for (i = am = 1, ref14 = tmpKMeansBreaks.length - 1; am <= ref14; i = am += 2) {\n        v = tmpKMeansBreaks[i];\n        if (!isNaN(v) && limits.indexOf(v) === -1) {\n          limits.push(v);\n        }\n      }\n    }\n    return limits;\n  };\n\n  hsi2rgb = function(h, s, i) {\n\n    /*\n    borrowed from here:\n    http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/hsi2rgb.cpp\n     */\n    var args, b, g, r;\n    args = unpack(arguments);\n    h = args[0], s = args[1], i = args[2];\n    if (isNaN(h)) {\n      h = 0;\n    }\n    h /= 360;\n    if (h < 1 / 3) {\n      b = (1 - s) / 3;\n      r = (1 + s * cos(TWOPI * h) / cos(PITHIRD - TWOPI * h)) / 3;\n      g = 1 - (b + r);\n    } else if (h < 2 / 3) {\n      h -= 1 / 3;\n      r = (1 - s) / 3;\n      g = (1 + s * cos(TWOPI * h) / cos(PITHIRD - TWOPI * h)) / 3;\n      b = 1 - (r + g);\n    } else {\n      h -= 2 / 3;\n      g = (1 - s) / 3;\n      b = (1 + s * cos(TWOPI * h) / cos(PITHIRD - TWOPI * h)) / 3;\n      r = 1 - (g + b);\n    }\n    r = limit(i * r * 3);\n    g = limit(i * g * 3);\n    b = limit(i * b * 3);\n    return [r * 255, g * 255, b * 255, args.length > 3 ? args[3] : 1];\n  };\n\n  rgb2hsi = function() {\n\n    /*\n    borrowed from here:\n    http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/rgb2hsi.cpp\n     */\n    var b, g, h, i, min, r, ref, s;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    TWOPI = Math.PI * 2;\n    r /= 255;\n    g /= 255;\n    b /= 255;\n    min = Math.min(r, g, b);\n    i = (r + g + b) / 3;\n    s = 1 - min / i;\n    if (s === 0) {\n      h = 0;\n    } else {\n      h = ((r - g) + (r - b)) / 2;\n      h /= Math.sqrt((r - g) * (r - g) + (r - b) * (g - b));\n      h = Math.acos(h);\n      if (b > g) {\n        h = TWOPI - h;\n      }\n      h /= TWOPI;\n    }\n    return [h * 360, s, i];\n  };\n\n  chroma.hsi = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['hsi']), function(){});\n  };\n\n  _input.hsi = hsi2rgb;\n\n  Color.prototype.hsi = function() {\n    return rgb2hsi(this._rgb);\n  };\n\n  interpolate_hsx = function(col1, col2, f, m) {\n    var dh, hue, hue0, hue1, lbv, lbv0, lbv1, res, sat, sat0, sat1, xyz0, xyz1;\n    if (m === 'hsl') {\n      xyz0 = col1.hsl();\n      xyz1 = col2.hsl();\n    } else if (m === 'hsv') {\n      xyz0 = col1.hsv();\n      xyz1 = col2.hsv();\n    } else if (m === 'hcg') {\n      xyz0 = col1.hcg();\n      xyz1 = col2.hcg();\n    } else if (m === 'hsi') {\n      xyz0 = col1.hsi();\n      xyz1 = col2.hsi();\n    } else if (m === 'lch' || m === 'hcl') {\n      m = 'hcl';\n      xyz0 = col1.hcl();\n      xyz1 = col2.hcl();\n    }\n    if (m.substr(0, 1) === 'h') {\n      hue0 = xyz0[0], sat0 = xyz0[1], lbv0 = xyz0[2];\n      hue1 = xyz1[0], sat1 = xyz1[1], lbv1 = xyz1[2];\n    }\n    if (!isNaN(hue0) && !isNaN(hue1)) {\n      if (hue1 > hue0 && hue1 - hue0 > 180) {\n        dh = hue1 - (hue0 + 360);\n      } else if (hue1 < hue0 && hue0 - hue1 > 180) {\n        dh = hue1 + 360 - hue0;\n      } else {\n        dh = hue1 - hue0;\n      }\n      hue = hue0 + f * dh;\n    } else if (!isNaN(hue0)) {\n      hue = hue0;\n      if ((lbv1 === 1 || lbv1 === 0) && m !== 'hsv') {\n        sat = sat0;\n      }\n    } else if (!isNaN(hue1)) {\n      hue = hue1;\n      if ((lbv0 === 1 || lbv0 === 0) && m !== 'hsv') {\n        sat = sat1;\n      }\n    } else {\n      hue = Number.NaN;\n    }\n    if (sat == null) {\n      sat = sat0 + f * (sat1 - sat0);\n    }\n    lbv = lbv0 + f * (lbv1 - lbv0);\n    return res = chroma[m](hue, sat, lbv);\n  };\n\n  _interpolators = _interpolators.concat((function() {\n    var len, o, ref, results;\n    ref = ['hsv', 'hsl', 'hsi', 'hcl', 'lch', 'hcg'];\n    results = [];\n    for (o = 0, len = ref.length; o < len; o++) {\n      m = ref[o];\n      results.push([m, interpolate_hsx]);\n    }\n    return results;\n  })());\n\n  interpolate_num = function(col1, col2, f, m) {\n    var n1, n2;\n    n1 = col1.num();\n    n2 = col2.num();\n    return chroma.num(n1 + (n2 - n1) * f, 'num');\n  };\n\n  _interpolators.push(['num', interpolate_num]);\n\n  interpolate_lab = function(col1, col2, f, m) {\n    var res, xyz0, xyz1;\n    xyz0 = col1.lab();\n    xyz1 = col2.lab();\n    return res = new Color(xyz0[0] + f * (xyz1[0] - xyz0[0]), xyz0[1] + f * (xyz1[1] - xyz0[1]), xyz0[2] + f * (xyz1[2] - xyz0[2]), m);\n  };\n\n  _interpolators.push(['lab', interpolate_lab]);\n\n}).call(this);\n\n\n\n// WEBPACK FOOTER //\n// webpack:///~/chroma-js/chroma.js","module.exports = require(\"react\");\n\n\n// WEBPACK FOOTER //\n// webpack:/external \"react\""],"sourceRoot":""}